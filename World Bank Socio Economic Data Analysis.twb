<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='WorldBankSocioEconomicDataAnalysis' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
        <calculation class='tableau' formula='6.' />
        <aliases>
          <alias key='1.' value='Life Expectancy' />
          <alias key='2.' value='Undernourishment' />
          <alias key='3.' value='CO2 Emission' />
          <alias key='4.' value='Health Expenditure%' />
          <alias key='5.' value='Education Expenditure%' />
          <alias key='6.' value='Unemployment' />
          <alias key='7.' value='Sanitation' />
        </aliases>
        <members>
          <member alias='Life Expectancy' value='1.' />
          <member alias='Undernourishment' value='2.' />
          <member alias='CO2 Emission' value='3.' />
          <member alias='Health Expenditure%' value='4.' />
          <member alias='Education Expenditure%' value='5.' />
          <member alias='Unemployment' value='6.' />
          <member alias='Sanitation' value='7.' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' inline='true' name='federated.191i6nz0duie951h985pi1sc0rhu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau' name='excel-direct.1yruiug1t02bvw1fu4c1b19y5ews'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Documents/GOVERMENT DATA ANALYSIS SPECIALIST GORONTALO/CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1yruiug1t02bvw1fu4c1b19y5ews' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:O3307:no:A1:O3307:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
            <column datatype='real' name='Life Expectancy World Bank' ordinal='5' />
            <column datatype='real' name='Prevelance of Undernourishment' ordinal='6' />
            <column datatype='real' name='CO2' ordinal='7' />
            <column datatype='real' name='Health Expenditure %' ordinal='8' />
            <column datatype='real' name='Education Expenditure %' ordinal='9' />
            <column datatype='real' name='Unemployment' ordinal='10' />
            <column datatype='real' name='Sanitation' ordinal='11' />
            <column datatype='real' name='Injuries' ordinal='12' />
            <column datatype='real' name='Communicable' ordinal='13' />
            <column datatype='real' name='NonCommunicable' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O3307:no:A1:O3307:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeGroup</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IncomeGroup]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>IncomeGroup</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy World Bank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy World Bank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Life Expectancy World Bank</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevelance of Undernourishment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prevelance of Undernourishment]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Prevelance of Undernourishment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Expenditure %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Expenditure %]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Health Expenditure %</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education Expenditure %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Education Expenditure %]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Education Expenditure %</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sanitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sanitation]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sanitation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Injuries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Injuries]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Injuries</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Communicable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Communicable]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Communicable</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NonCommunicable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NonCommunicable]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>NonCommunicable</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Zero' datatype='integer' name='[Calculation_1236238151977521152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='Average per Indicators' datatype='real' name='[Calculation_1236238151988449282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN AVG([Life Expectancy World Bank])&#13;&#10;WHEN 2 THEN AVG([Prevelance of Undernourishment])&#13;&#10;WHEN 3 THEN AVG([CO2])&#13;&#10;WHEN 4 THEN AVG([Health Expenditure %])&#13;&#10;WHEN 5 THEN AVG([Education Expenditure %])&#13;&#10;WHEN 6 THEN AVG([Unemployment])&#13;&#10;WHEN 7 THEN AVG([Sanitation])&#13;&#10;END' />
      </column>
      <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
      </column>
      <column caption='YoY Growth %' datatype='real' name='[Calculation_1236238152027672584]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((AVG([Calculation_1236238152009367557])) - LOOKUP(AVG([Calculation_1236238152009367557]), -1))&#13;&#10;/ ABS(LOOKUP(AVG([Calculation_1236238152009367557]), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Latest Value Each Indicators' datatype='real' name='[Calculation_1236238152033873930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_1236238152009367557] END' />
      </column>
      <column caption='Growth %' datatype='real' name='[Calculation_1236238152036528140]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_82472222595219459]-[Calculation_82472222596276228])/[Calculation_82472222596276228]' />
      </column>
      <column caption='Value Gap' datatype='real' name='[Calculation_1236238152037953550]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Year]: (MAX([Calculation_1236238152009367557])-MIN([Calculation_1236238152009367557]))}' />
      </column>
      <column caption='Max value' datatype='real' name='[Calculation_1236238152039297039]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Year]: MAX([Calculation_1236238152009367557])}' />
      </column>
      <column caption='Min Value ' datatype='real' name='[Calculation_1236238152039387152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Year]: MIN([Calculation_1236238152009367557])}' />
      </column>
      <column caption='Ratio Gap' datatype='real' name='[Calculation_1236238152044040209]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1236238152039297039]/[Calculation_1236238152039387152]' />
      </column>
      <column caption='Latest Gap Ratio' datatype='real' name='[Calculation_1236238152045322258]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_1236238152044040209] END' />
      </column>
      <column caption='Indicators per year per country' datatype='real' name='[Calculation_1366279593450696704]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Year], [Country Code]: AVG([Calculation_1236238152009367557])}' />
      </column>
      <column caption='Total Countries' datatype='integer' name='[Calculation_387028146940157952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Country Code])' />
      </column>
      <column caption='Worst Case' datatype='real' name='[Calculation_82472222580174848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039387152]&#13;&#10;END' />
      </column>
      <column caption='Indicators CY' datatype='real' name='[Calculation_82472222595219459]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : AVG(IF YEAR([Year])={MAX(YEAR([Year]))}&#13;&#10;THEN&#13;&#10;[Calculation_1236238152009367557]&#13;&#10;END&#13;&#10;)}' />
      </column>
      <column caption='Indicators PY' datatype='real' name='[Calculation_82472222596276228]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : AVG(IF YEAR([Year])={MAX(YEAR([Year]))}-1&#13;&#10;THEN&#13;&#10;[Calculation_1236238152009367557]&#13;&#10;END&#13;&#10;)}' />
      </column>
      <column caption='Worst value country' datatype='string' name='[Calculation_82472222618546183]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Calculation_82472222580174848] then [Country Name] end)}' />
      </column>
      <column caption='Latest Worst Country' datatype='string' name='[Calculation_974184949032181760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_82472222618546183] END' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[IncomeGroup]' new-bin='true'>
          <bin default-name='false' value='&quot;High&quot;'>
            <value>&quot;High income&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Low&quot;'>
            <value>&quot;Low income&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Lower middle&quot;'>
            <value>&quot;Lower middle income&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Upper middle&quot;'>
            <value>&quot;Upper middle income&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;High income&quot;' value='High' />
          <alias key='&quot;Low income&quot;' value='Low' />
          <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
          <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
        </aliases>
      </column>
      <column caption='Latest Gap' datatype='real' name='[Latest Gap Ratio (copy)_82472222607609861]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_1236238152037953550] END' />
      </column>
      <column caption='Non Communicable' datatype='real' name='[NonCommunicable]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Latest Worst Case' datatype='real' name='[Worst Case (copy)_82472222581288962]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_82472222580174848] END' />
      </column>
      <column caption='Best Case' datatype='real' name='[Worst Case (copy)_974184949036552193]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039297039]&#13;&#10;END' />
      </column>
      <column caption='Best value country' datatype='string' name='[Worst value country (copy)_974184949036974082]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Worst Case (copy)_974184949036552193] then [Country Name] end)}' />
      </column>
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Zero (copy)' datatype='integer' name='[Zero (copy)_1236238151977566209]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='World bank data' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]' role='measure' type='quantitative' />
      <column-instance column='[IncomeGroup]' derivation='None' name='[none:IncomeGroup:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Income Group,YEAR(Year))' hidden='true' name='[Action (Income Group,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[IncomeGroup]' />
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Worst value country,Best value country,YEAR(Year))' hidden='true' name='[Action (Worst value country,Best value country,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_82472222618546183]' />
          <groupfilter function='level-members' level='[Worst value country (copy)_974184949036974082]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Latest Worst Country)' hidden='true' name='[Tooltip (Latest Worst Country)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_974184949032181760]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/user/AppData/Local/Temp/TableauTemp/#TableauTemp_1brhxrw1337kfh1at2inn02tbehh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/18/2025 02:55:50 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IncomeGroup</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IncomeGroup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IncomeGroup</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy World Bank</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy World Bank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy World Bank</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1990</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Prevelance of Undernourishment</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Prevelance of Undernourishment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Prevelance of Undernourishment</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>402</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CO2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1564</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health Expenditure %</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Health Expenditure %]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health Expenditure %</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2360</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Education Expenditure %</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Education Expenditure %]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Education Expenditure %</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1440</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unemployment</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unemployment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unemployment</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1513</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sanitation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sanitation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sanitation</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1293</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Injuries</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Injuries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Injuries</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3306</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Communicable</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Communicable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Communicable</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3306</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NonCommunicable</remote-name>
              <remote-type>5</remote-type>
              <local-name>[NonCommunicable]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NonCommunicable</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3306</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D6A5185390CA4FCAB6D6E28DA3781161]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:IncomeGroup:nk]' type='palette'>
            <map to='#34844a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#5aa355'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#a3bd5a'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country Name' />
        <field-sort-custom-order field='Country Code' />
        <field-sort-custom-order field='Calculation_387028146940157952' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='IncomeGroup' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Calculation_1236238151998578691' />
        <field-sort-custom-order field='Life Expectancy World Bank' />
        <field-sort-custom-order field='Prevelance of Undernourishment' />
        <field-sort-custom-order field='CO2' />
        <field-sort-custom-order field='Health Expenditure %' />
        <field-sort-custom-order field='Education Expenditure %' />
        <field-sort-custom-order field='Unemployment' />
        <field-sort-custom-order field='Sanitation' />
        <field-sort-custom-order field='Injuries' />
        <field-sort-custom-order field='Communicable' />
        <field-sort-custom-order field='NonCommunicable' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
          <calculation class='tableau' formula='6.' />
          <aliases>
            <alias key='1.' value='Life Expectancy' />
            <alias key='2.' value='Undernourishment' />
            <alias key='3.' value='CO2 Emission' />
            <alias key='4.' value='Health Expenditure%' />
            <alias key='5.' value='Education Expenditure%' />
            <alias key='6.' value='Unemployment' />
            <alias key='7.' value='Sanitation' />
          </aliases>
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='World bank data' id='Sheet1_D6A5185390CA4FCAB6D6E28DA3781161'>
            <properties context=''>
              <relation connection='excel-direct.1yruiug1t02bvw1fu4c1b19y5ews' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:O3307:no:A1:O3307:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='string' name='IncomeGroup' ordinal='3' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
                  <column datatype='real' name='Life Expectancy World Bank' ordinal='5' />
                  <column datatype='real' name='Prevelance of Undernourishment' ordinal='6' />
                  <column datatype='real' name='CO2' ordinal='7' />
                  <column datatype='real' name='Health Expenditure %' ordinal='8' />
                  <column datatype='real' name='Education Expenditure %' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sanitation' ordinal='11' />
                  <column datatype='real' name='Injuries' ordinal='12' />
                  <column datatype='real' name='Communicable' ordinal='13' />
                  <column datatype='real' name='NonCommunicable' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_F4E9D60031564588890FD479C8845950]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Income Group' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3_842151F9A6FF477CBFDBBA72EAE3E2F0]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='average key indicators' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Income Group' />
        <param name='target' value='average key indicators' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_E82FBAE1F5064D9CAA433D6D67F311FF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Countries by income group- map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_7DC501B5BFA94471AE13775677039DFE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Time Series Analysis' type='sheet' worksheet='The average value and %growth overtime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Time Series Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_AF49AC98CC0644018A70B8CBA04284F1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='average key indicators' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_26C30728DA4F465D8ABB2B03BEE87275]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Time Series Analysis' type='sheet' worksheet='The Gap And Ratio Overtime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Time Series Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Countries by income group- map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>&lt;</run>
            <run bold='true' fontsize='10'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontsize='10'>&gt; by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1236238152009367557]' derivation='None' name='[none:Calculation_1236238152009367557:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Code]' derivation='None' name='[none:Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[IncomeGroup]' derivation='None' name='[none:IncomeGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.191i6nz0duie951h985pi1sc0rhu].[Longitude (generated)]' field-type='quantitative' max='37119653.26192271' min='-5146968.1173549779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.191i6nz0duie951h985pi1sc0rhu].[Latitude (generated)]' field-type='quantitative' max='24089790.621543869' min='-8549433.6098030843' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]' />
              <lod column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Country Code:nk]' />
              <tooltip column='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Country Name:nk]' />
              <geometry column='[federated.191i6nz0duie951h985pi1sc0rhu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.191i6nz0duie951h985pi1sc0rhu].[Latitude (generated)]</rows>
        <cols>[federated.191i6nz0duie951h985pi1sc0rhu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{53C7E2F6-4E50-4BD2-BDF9-448B4DD6FAB3}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='Max value' datatype='real' name='[Calculation_1236238152039297039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MAX([Calculation_1236238152009367557])}' />
            </column>
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1236238152039297039]' derivation='Sum' name='[sum:Calculation_1236238152039297039:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Expenditure %]' derivation='Sum' name='[sum:Health Expenditure %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Health Expenditure \%:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152039297039:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]</rows>
        <cols>[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D2C54817-004A-4A7E-BE77-3A0DEA2BF89C}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='YoY Growth %' datatype='real' name='[Calculation_1236238152027672584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([Calculation_1236238152009367557])) - LOOKUP(AVG([Calculation_1236238152009367557]), -1))&#13;&#10;/ ABS(LOOKUP(AVG([Calculation_1236238152009367557]), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1236238152009367557]' derivation='Avg' name='[avg:Calculation_1236238152009367557:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238152027672584]' derivation='User' name='[usr:Calculation_1236238152027672584:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[avg:Calculation_1236238152009367557:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk:2]' value='*+0.00%;0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]</rows>
        <cols>[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{82ECF5C1-AE05-47E6-A4EE-9EE74CB70001}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
          </datasources>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column-instance column='[Country Code]' derivation='None' name='[none:Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[IncomeGroup]' derivation='None' name='[none:IncomeGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2]' derivation='Sum' name='[pcto:sum:CO2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]'>
            <groupfilter function='member' level='[none:IncomeGroup:nk]' member='&quot;Upper middle income&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[pcto:sum:CO2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Country Code:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{24A3A3AB-7C7E-4FE0-BEA3-0BA60E776169}' />
    </worksheet>
    <worksheet name='The Gap And Ratio Overtime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>&lt;Sheet Name&gt; of &lt;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='Value Gap' datatype='real' name='[Calculation_1236238152037953550]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: (MAX([Calculation_1236238152009367557])-MIN([Calculation_1236238152009367557]))}' />
            </column>
            <column caption='Max value' datatype='real' name='[Calculation_1236238152039297039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MAX([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Min Value ' datatype='real' name='[Calculation_1236238152039387152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MIN([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Ratio Gap' datatype='real' name='[Calculation_1236238152044040209]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1236238152039297039]/[Calculation_1236238152039387152]' />
            </column>
            <column caption='Worst Case' datatype='real' name='[Calculation_82472222580174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039387152]&#13;&#10;END' />
            </column>
            <column caption='Worst value country' datatype='string' name='[Calculation_82472222618546183]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Calculation_82472222580174848] then [Country Name] end)}' />
            </column>
            <column caption='Latest Worst Country' datatype='string' name='[Calculation_974184949032181760]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_82472222618546183] END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column caption='Best Case' datatype='real' name='[Worst Case (copy)_974184949036552193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039297039]&#13;&#10;END' />
            </column>
            <column caption='Best value country' datatype='string' name='[Worst value country (copy)_974184949036974082]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Worst Case (copy)_974184949036552193] then [Country Name] end)}' />
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_82472222618546183]' derivation='None' name='[none:Calculation_82472222618546183:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_974184949032181760]' derivation='None' name='[none:Calculation_974184949032181760:nk]' pivot='key' type='nominal' />
            <column-instance column='[Worst value country (copy)_974184949036974082]' derivation='None' name='[none:Worst value country (copy)_974184949036974082:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1236238152037953550]' derivation='Sum' name='[sum:Calculation_1236238152037953550:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238152039297039]' derivation='Sum' name='[sum:Calculation_1236238152039297039:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238152039387152]' derivation='Sum' name='[sum:Calculation_1236238152039387152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238152044040209]' derivation='Sum' name='[sum:Calculation_1236238152044040209:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152039297039:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152039387152:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152037953550:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152044040209:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152039297039:qk]&quot;</bucket>
              <bucket>&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152039387152:qk]&quot;</bucket>
              <bucket>&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152037953550:qk]&quot;</bucket>
              <bucket>&quot;[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152044040209:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[Action (Income Group,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_7DC501B5BFA94471AE13775677039DFE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[IncomeGroup]' />
              <groupfilter function='level-members' level='[tyr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_974184949032181760:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' direction='DESC' measure-to-sort-by='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]</column>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]</column>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[Action (Income Group,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]' value='108' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Calculation_1236238152044040209:qk]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_82472222618546183:nk]' value='232' />
            <format attr='width' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Worst value country (copy)_974184949036974082:nk]' value='172' />
            <format attr='width' field='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' value='104' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#449754' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok] / ([federated.191i6nz0duie951h985pi1sc0rhu].[none:Worst value country (copy)_974184949036974082:nk] / [federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_82472222618546183:nk]))</rows>
        <cols>[federated.191i6nz0duie951h985pi1sc0rhu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3BFF4A07-5EC8-4F48-B794-64900F5424D2}' />
    </worksheet>
    <worksheet name='The average value and %growth overtime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>&lt;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>&gt; Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Average per Indicators' datatype='real' name='[Calculation_1236238151988449282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN AVG([Life Expectancy World Bank])&#13;&#10;WHEN 2 THEN AVG([Prevelance of Undernourishment])&#13;&#10;WHEN 3 THEN AVG([CO2])&#13;&#10;WHEN 4 THEN AVG([Health Expenditure %])&#13;&#10;WHEN 5 THEN AVG([Education Expenditure %])&#13;&#10;WHEN 6 THEN AVG([Unemployment])&#13;&#10;WHEN 7 THEN AVG([Sanitation])&#13;&#10;END' />
            </column>
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='YoY Growth %' datatype='real' name='[Calculation_1236238152027672584]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((AVG([Calculation_1236238152009367557])) - LOOKUP(AVG([Calculation_1236238152009367557]), -1))&#13;&#10;/ ABS(LOOKUP(AVG([Calculation_1236238152009367557]), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Max value' datatype='real' name='[Calculation_1236238152039297039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MAX([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Min Value ' datatype='real' name='[Calculation_1236238152039387152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MIN([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Worst Case' datatype='real' name='[Calculation_82472222580174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039387152]&#13;&#10;END' />
            </column>
            <column caption='Worst value country' datatype='string' name='[Calculation_82472222618546183]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Calculation_82472222580174848] then [Country Name] end)}' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column caption='Best Case' datatype='real' name='[Worst Case (copy)_974184949036552193]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039297039]&#13;&#10;END' />
            </column>
            <column caption='Best value country' datatype='string' name='[Worst value country (copy)_974184949036974082]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Worst Case (copy)_974184949036552193] then [Country Name] end)}' />
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[IncomeGroup]' derivation='None' name='[none:IncomeGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life Expectancy World Bank]' derivation='Sum' name='[sum:Life Expectancy World Bank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238151988449282]' derivation='User' name='[usr:Calculation_1236238151988449282:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238152027672584]' derivation='User' name='[usr:Calculation_1236238152027672584:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[Action (Worst value country,Best value country,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_26C30728DA4F465D8ABB2B03BEE87275]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_82472222618546183]' />
              <groupfilter function='level-members' level='[Worst value country (copy)_974184949036974082]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' direction='DESC' using='[federated.191i6nz0duie951h985pi1sc0rhu].[sum:Life Expectancy World Bank:qk]' />
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[Action (Worst value country,Best value country,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.191i6nz0duie951h985pi1sc0rhu].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' scope='rows' value='Average Value' />
            <encoding attr='space' class='1' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk]' value='*+0.00%;-0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#449754' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' value='93' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' id='legend-color' value='7' />
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.69165748357772827' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.55972373485565186' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk] + ([federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk] + ([federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk] + [federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238152027672584:qk])))</rows>
        <cols>[federated.191i6nz0duie951h985pi1sc0rhu].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{D8BFF58A-03D1-4297-BAB9-00990427D899}' />
    </worksheet>
    <worksheet name='average key indicators'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Average of &lt;</run>
            <run bold='true' fontsize='10'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontsize='10'>&gt; by Income Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Average per Indicators' datatype='real' name='[Calculation_1236238151988449282]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN AVG([Life Expectancy World Bank])&#13;&#10;WHEN 2 THEN AVG([Prevelance of Undernourishment])&#13;&#10;WHEN 3 THEN AVG([CO2])&#13;&#10;WHEN 4 THEN AVG([Health Expenditure %])&#13;&#10;WHEN 5 THEN AVG([Education Expenditure %])&#13;&#10;WHEN 6 THEN AVG([Unemployment])&#13;&#10;WHEN 7 THEN AVG([Sanitation])&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;High income&quot;' value='High' />
                <alias key='&quot;Low income&quot;' value='Low' />
                <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
                <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
              </aliases>
            </column>
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Life Expectancy World Bank]' derivation='Avg' name='[avg:Life Expectancy World Bank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IncomeGroup]' derivation='None' name='[none:IncomeGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1236238151988449282]' derivation='User' name='[usr:Calculation_1236238151988449282:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' direction='DESC' using='[federated.191i6nz0duie951h985pi1sc0rhu].[avg:Life Expectancy World Bank:qk]' />
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' scope='rows' value='false' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' value='89' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]' value='' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Choose Indicators'>
              <formatted-text>
                <run>Choose Indicators</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.191i6nz0duie951h985pi1sc0rhu].[usr:Calculation_1236238151988449282:qk]</rows>
        <cols>[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]</cols>
      </table>
      <simple-id uuid='{1F78C5FB-0842-4B03-9AEA-F6829D70375A}' />
    </worksheet>
    <worksheet name='latest average value'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Latest Year Global Avg of  &lt;</run>
            <run fontalignment='1' fontsize='9'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1' fontsize='9'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='Latest Value Each Indicators' datatype='real' name='[Calculation_1236238152033873930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_1236238152009367557] END' />
            </column>
            <column caption='Growth %' datatype='real' name='[Calculation_1236238152036528140]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_82472222595219459]-[Calculation_82472222596276228])/[Calculation_82472222596276228]' />
            </column>
            <column caption='Indicators CY' datatype='real' name='[Calculation_82472222595219459]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED : AVG(IF YEAR([Year])={MAX(YEAR([Year]))}&#13;&#10;THEN&#13;&#10;[Calculation_1236238152009367557]&#13;&#10;END&#13;&#10;)}' />
            </column>
            <column caption='Indicators PY' datatype='real' name='[Calculation_82472222596276228]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED : AVG(IF YEAR([Year])={MAX(YEAR([Year]))}-1&#13;&#10;THEN&#13;&#10;[Calculation_1236238152009367557]&#13;&#10;END&#13;&#10;)}' />
            </column>
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1236238152036528140]' derivation='Attribute' name='[attr:Calculation_1236238152036528140:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1236238152033873930]' derivation='Avg' name='[avg:Calculation_1236238152033873930:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Calculation_1236238152036528140:qk]' value='*+0.0%;-0.0%' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[avg:Calculation_1236238152033873930:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' value='310' />
            <format attr='height' value='145' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#5ed173' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[avg:Calculation_1236238152033873930:qk]' />
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Calculation_1236238152036528140:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[avg:Calculation_1236238152033873930:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Calculation_1236238152036528140:qk]> vs PY]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0340392A-B880-493F-B6CC-CCF8BE4D6BD9}' />
    </worksheet>
    <worksheet name='latest global gap'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Latest Year Global Gap of &lt;</run>
            <run fontalignment='1' fontsize='9'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1' fontsize='9'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='Value Gap' datatype='real' name='[Calculation_1236238152037953550]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: (MAX([Calculation_1236238152009367557])-MIN([Calculation_1236238152009367557]))}' />
            </column>
            <column caption='Max value' datatype='real' name='[Calculation_1236238152039297039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MAX([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Min Value ' datatype='real' name='[Calculation_1236238152039387152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MIN([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Ratio Gap' datatype='real' name='[Calculation_1236238152044040209]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1236238152039297039]/[Calculation_1236238152039387152]' />
            </column>
            <column caption='Latest Gap Ratio' datatype='real' name='[Calculation_1236238152045322258]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_1236238152044040209] END' />
            </column>
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column caption='Latest Gap' datatype='real' name='[Latest Gap Ratio (copy)_82472222607609861]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_1236238152037953550] END' />
            </column>
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1236238152045322258]' derivation='Attribute' name='[attr:Calculation_1236238152045322258:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latest Gap Ratio (copy)_82472222607609861]' derivation='Attribute' name='[attr:Latest Gap Ratio (copy)_82472222607609861:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='246' />
            <format attr='height' value='116' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Calculation_1236238152045322258:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Latest Gap Ratio (copy)_82472222607609861:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#5ed173' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Latest Gap Ratio (copy)_82472222607609861:qk]' />
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Calculation_1236238152045322258:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Latest Gap Ratio (copy)_82472222607609861:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>ratio: </run>
                <run bold='true' fontsize='10'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Calculation_1236238152045322258:qk]>]]></run>
                <run bold='true' fontsize='10'>x</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F0D5E03B-1E53-45B3-A1B9-3032839844D0}' />
    </worksheet>
    <worksheet name='latest worst case'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='9'>Latest Year Worst Value of  &lt;</run>
            <run fontalignment='1' fontsize='9'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1' fontsize='9'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
              <calculation class='tableau' formula='6.' />
              <aliases>
                <alias key='1.' value='Life Expectancy' />
                <alias key='2.' value='Undernourishment' />
                <alias key='3.' value='CO2 Emission' />
                <alias key='4.' value='Health Expenditure%' />
                <alias key='5.' value='Education Expenditure%' />
                <alias key='6.' value='Unemployment' />
                <alias key='7.' value='Sanitation' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
            <column datatype='real' name='[CO2]' role='measure' type='quantitative' />
            <column caption='Indicators' datatype='real' name='[Calculation_1236238152009367557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Life Expectancy World Bank]&#13;&#10;WHEN 2 THEN [Prevelance of Undernourishment]&#13;&#10;WHEN 3 THEN [CO2]&#13;&#10;WHEN 4 THEN [Health Expenditure %]&#13;&#10;WHEN 5 THEN [Education Expenditure %]&#13;&#10;WHEN 6 THEN [Unemployment]&#13;&#10;WHEN 7 THEN [Sanitation]&#13;&#10;END' />
            </column>
            <column caption='Max value' datatype='real' name='[Calculation_1236238152039297039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MAX([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Min Value ' datatype='real' name='[Calculation_1236238152039387152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Year]: MIN([Calculation_1236238152009367557])}' />
            </column>
            <column caption='Worst Case' datatype='real' name='[Calculation_82472222580174848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 2 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 3 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 4 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 5 THEN [Calculation_1236238152039387152]&#13;&#10;WHEN 6 THEN [Calculation_1236238152039297039]&#13;&#10;WHEN 7 THEN [Calculation_1236238152039387152]&#13;&#10;END' />
            </column>
            <column caption='Worst value country' datatype='string' name='[Calculation_82472222618546183]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{ FIXED [Year]: MIn( if [Calculation_1236238152009367557]=[Calculation_82472222580174848] then [Country Name] end)}' />
            </column>
            <column caption='Latest Worst Country' datatype='string' name='[Calculation_974184949032181760]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_82472222618546183] END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Education Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health Expenditure %]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy World Bank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prevelance of Undernourishment]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sanitation]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unemployment]' role='measure' type='quantitative' />
            <column caption='Latest Worst Case' datatype='real' name='[Worst Case (copy)_82472222581288962]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = { FIXED : MAX([Year]) } THEN [Calculation_82472222580174848] END' />
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Worst Case (copy)_82472222581288962]' derivation='Attribute' name='[attr:Worst Case (copy)_82472222581288962:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184949032181760]' derivation='None' name='[none:Calculation_974184949032181760:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_974184949032181760:nk]' />
              <groupfilter function='member' level='[none:Calculation_974184949032181760:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='246' />
            <format attr='height' value='116' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Worst Case (copy)_82472222581288962:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#5ed173' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Worst Case (copy)_82472222581288962:qk]' />
              <text column='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Latest Worst Case:&#9;</run>
                <run bold='true'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Worst Case (copy)_82472222581288962:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Distinct count of Worst value country:	</run>
                <run bold='true'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.191i6nz0duie951h985pi1sc0rhu].[attr:Worst Case (copy)_82472222581288962:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[on <[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_974184949032181760:nk]> ]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{29CA9242-32EC-487F-A929-7272C145FE9B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>WORLD BANK GLOBAL LIFE EXPETANCY REPORT (2001 -2019)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3faf9' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#317b45' />
          <format attr='color' value='#ffffff' />
          <format attr='font-weight' value='bold' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='font-size' value='9' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet1 (CLEANED_SOCIO_ECONOMIC_WORLD_BANK_DATA_fortableau)' name='federated.191i6nz0duie951h985pi1sc0rhu' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
          <calculation class='tableau' formula='6.' />
          <aliases>
            <alias key='1.' value='Life Expectancy' />
            <alias key='2.' value='Undernourishment' />
            <alias key='3.' value='CO2 Emission' />
            <alias key='4.' value='Health Expenditure%' />
            <alias key='5.' value='Education Expenditure%' />
            <alias key='6.' value='Unemployment' />
            <alias key='7.' value='Sanitation' />
          </aliases>
          <members>
            <member alias='Life Expectancy' value='1.' />
            <member alias='Undernourishment' value='2.' />
            <member alias='CO2 Emission' value='3.' />
            <member alias='Health Expenditure%' value='4.' />
            <member alias='Education Expenditure%' value='5.' />
            <member alias='Unemployment' value='6.' />
            <member alias='Sanitation' value='7.' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.191i6nz0duie951h985pi1sc0rhu'>
        <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;High income&quot;' value='High' />
            <alias key='&quot;Low income&quot;' value='Low' />
            <alias key='&quot;Lower middle income&quot;' value='Lower middle' />
            <alias key='&quot;Upper middle income&quot;' value='Upper middle' />
          </aliases>
        </column>
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[IncomeGroup]' derivation='None' name='[none:IncomeGroup:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='54' h='7750' id='5' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90250' id='4' type-v2='layout-basic' w='98400' x='800' y='8750' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='8250' id='11' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='25600' x='1400' y='8625'>
          <formatted-text>
            <run fontalignment='1'>Choose The Indicators</run>
          </formatted-text>
        </zone>
        <zone h='54625' id='12' name='average key indicators' w='43300' x='56000' y='45250' />
        <zone h='26250' id='13' name='latest average value' w='31200' x='600' y='17500' />
        <zone h='26250' id='14' name='latest global gap' w='29800' x='36300' y='17500' />
        <zone h='26250' id='15' name='latest worst case' w='28900' x='70500' y='17500' />
        <zone h='54625' id='16' name='Countries by income group- map' w='54100' x='900' y='45000' />
        <zone h='7375' id='17' mode='checkdropdown' name='Countries by income group- map' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' type-v2='filter' w='26700' x='34800' y='8625' />
        <zone h='7250' id='18' mode='checkdropdown' name='Countries by income group- map' param='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' type-v2='filter' w='31300' x='67600' y='8875' />
        <zone h='4625' id='19' name='Countries by income group- map' pane-specification-id='0' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]' show-title='false' type-v2='color' w='28400' x='26100' y='51000' />
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontsize='16'>WORLD BANK GLOBAL LIFE EXPETANCY REPORT (2002 -2022)</run>
              </formatted-text>
            </title>
          </layout-options>
          <zones>
            <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='37' h='6875' id='5' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='91125' id='4' type-v2='layout-basic' w='98400' x='800' y='7875' />
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
            <zone custom-title='true' h='6500' id='11' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='23100' x='76100' y='22375'>
              <formatted-text>
                <run fontalignment='1'>Choose The Indicators</run>
              </formatted-text>
            </zone>
            <zone h='65000' id='12' name='average key indicators' w='35400' x='64500' y='29875' />
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{56F78F74-B492-4A7E-AEC5-3D0EE1F12598}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Time Series Analysis'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3faf9' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#317b45' />
          <format attr='color' value='#ffffff' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='1000' maxwidth='1000' minheight='1000' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Unemployment' caption='p.Choose Indicators' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='6.'>
          <calculation class='tableau' formula='6.' />
          <aliases>
            <alias key='1.' value='Life Expectancy' />
            <alias key='2.' value='Undernourishment' />
            <alias key='3.' value='CO2 Emission' />
            <alias key='4.' value='Health Expenditure%' />
            <alias key='5.' value='Education Expenditure%' />
            <alias key='6.' value='Unemployment' />
            <alias key='7.' value='Sanitation' />
          </aliases>
          <members>
            <member alias='Life Expectancy' value='1.' />
            <member alias='Undernourishment' value='2.' />
            <member alias='CO2 Emission' value='3.' />
            <member alias='Health Expenditure%' value='4.' />
            <member alias='Education Expenditure%' value='5.' />
            <member alias='Unemployment' value='6.' />
            <member alias='Sanitation' value='7.' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='16' param='vert' type-v2='layout-flow' w='98400' x='800' y='800'>
            <zone fixed-size='83' h='9100' id='17' is-fixed='true' type-v2='title' w='98400' x='800' y='800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89300' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='9900'>
              <zone h='89300' id='8' type-v2='layout-basic' w='98400' x='800' y='9900' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47750' id='10' name='The average value and %growth overtime' w='96000' x='1000' y='9875' />
        <zone h='2000' id='11' leg-item-layout='horz' name='The average value and %growth overtime' pane-specification-id='1' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' show-title='false' type-v2='color' w='40200' x='54000' y='11000' />
        <zone custom-title='true' h='5900' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='28600' x='66700' y='2900'>
          <formatted-text>
            <run fontcolor='#ffffff'>Choose Indicators</run>
          </formatted-text>
        </zone>
        <zone h='41375' id='22' name='The Gap And Ratio Overtime' w='98600' x='1200' y='58500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='45' param='vert' type-v2='layout-flow' w='98400' x='800' y='800'>
                <zone fixed-size='83' h='9100' id='17' type-v2='title' w='98400' x='800' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='5900' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='28600' x='66700' y='2900'>
                  <formatted-text>
                    <run fontcolor='#ffffff'>Choose Indicators</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47750' id='10' is-fixed='true' name='The average value and %growth overtime' w='96000' x='1000' y='9875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2000' id='11' leg-item-layout='horz' name='The average value and %growth overtime' pane-specification-id='1' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' show-title='false' type-v2='color' w='40200' x='54000' y='11000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41375' id='22' is-fixed='true' name='The Gap And Ratio Overtime' w='98600' x='1200' y='58500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F4E3CEC3-09F9-4334-A992-92322B2C8FE4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Countries by income group- map'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.191i6nz0duie951h985pi1sc0rhu].[yr:Year:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]</field>
            <field>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1366279593450696704:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24BDDF5F-869E-471B-9937-00E477AF369B}' />
    </window>
    <window class='worksheet' name='average key indicators'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' size='2' type='parameter' />
            <card pane-specification-id='2' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' size='8' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FF3E13D0-6EC8-4838-8404-312F4383908E}' />
    </window>
    <window class='worksheet' name='latest average value'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{64B22427-9C68-4083-A06F-DA5F79C7DF3F}' />
    </window>
    <window class='worksheet' name='latest global gap'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{E4F6A6DE-1F22-4AF9-9F92-4C296C86DBFB}' />
    </window>
    <window class='worksheet' name='latest worst case'>
      <cards>
        <edge name='left'>
          <strip size='146'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{027FC425-B00E-4D5B-8BE7-BCE601F5D8AE}' />
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Countries by income group- map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Calculation_1236238152009367557:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='average key indicators'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='latest average value' />
        <viewpoint name='latest global gap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='latest worst case'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{E973A503-F9C5-4065-A947-CFCD732EE698}' />
    </window>
    <window class='worksheet' name='The Gap And Ratio Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2EBD0903-5313-4DF3-B154-8507DDB71054}' />
    </window>
    <window class='worksheet' name='The average value and %growth overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BD671D23-E994-4660-A707-5134B5E3F78D}' />
    </window>
    <window class='dashboard' maximized='true' name='Time Series Analysis'>
      <viewpoints>
        <viewpoint name='The Gap And Ratio Overtime' />
        <viewpoint name='The average value and %growth overtime'>
          <zoom type='entire-view' />
          <highlight field='[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{CF90C98D-D9CA-4634-855A-CE45BD7CCF68}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2EC00F22-649D-4B2B-82B7-5FAECB730496}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.191i6nz0duie951h985pi1sc0rhu].[none:Country Code:nk]</field>
            <field>[federated.191i6nz0duie951h985pi1sc0rhu].[none:IncomeGroup:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7E687E07-EEA0-4FC3-91BC-2C3573B607C4}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.191i6nz0duie951h985pi1sc0rhu].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8946A97D-2740-41B3-BD37-87FDC09BD6D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries by income group- map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3xc13Xv+z11+gww6B0kCJAEe5eoQqtZXbRlybEkF9mOU9xy48QvTndu
      7kteuuMSl9ixo+siN9mSrWKJKlSlRIm9FxCNRMcUTD9lvz+GMxyAAAmRAKGA+H0++JAzc84+
      e8+stffqS4pEIkLTNOYwh8sRqqZpuFyumZ7HHOYwI5BnegJzmMNMYo4B5nBZY44B5nBZY44B
      5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B
      5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B
      5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B5nBZY44B
      5nBZQ53pCbxTkUgkCIXDdJ/q5vXdbxI1YtSWVLFu6RqWLG6d6enNYYogJRIJMdcg4wySySS7
      9+zm6Re2sH34ACeVEEISGJKFjESZ7WeeUsF7N93BbTfcgiRJMz3lOVwE5k6A0wiHw/zgFz9m
      fm0Djzz6C3r1CCfcQ1BA37YQDEsx+kWU7me+y8LGZhYsWDBzk57DRWNWMMCBgwfwerzU19e/
      7XujIyN87RtfY+fAIdqVfmp3Bwnabqrd5ZxgKH9dRcpHMOMhqRj4TSe6Q+cXW37F5xf84VQu
      ZQ6XGLOCAV7t3MGvtz5Jk7uWq5ddwbKly1jQdP6duau7ixdffJFXenaRlk10SaXLNUxSyRAx
      k1DQO9CSBEe9/ZiSnX8vdjzFlmef5frrrkOW5+wJ/xMxK361lG6QVkxOhnr5+ls/5Ivf+nvS
      6fR570smk6QzGRa66tFthfK0j8WxSqJqiqiWGnXtoCOGKdtZkej032FHD3/7m6/wb//9NTKZ
      zPQsbg7TilnBAAAp1aC9dJioO0WvK8J/ff97hEKhUdcIIQA4efIkX/7219jy7LO82b2X3enj
      WJKg3T3EoB4jaLgn9UwhwZAe54Vj2zh16tSUr2kO049ZIQIBJB3Gmf9rGR7q/zXeZ7x86P0P
      YFkWJ0+e5JEnf0lzwwJKg6U8fOwpKinmfWtvZfdbx6hMujBlm053iEDmHFYxkT0ABCAhUW75
      +cSm+y5I/5jDzGPWMEAhLEUQSLtYtmgp3adO8s8/+Cp7+w+TVAzq97/FhhVrWeCqZadxjId3
      /Jq7Kq/l+c7XsaXsCRHRk+OOq9oyN1VuQIpYmJhUV1Vz743vIRQOMTQ8RHtHB+vWrL2US53D
      RWL2MYAAh6ny4ZV3MxwL80//9e/s9XZjOwWSkNCEzLYDb9Hgr0a3VU4o/ZQMt+GUHecctsh0
      s0ZrxoimeHPkEAJYrpv88ulf8cjRLfztnX/EM89vYd2atfT29uJ0OvF4PGiads5x5zCzmBUM
      oFgymikjC5mGRCk3Lr+Wq1deyUf/4w9JO00qUj56XFEkIKakOeYaJBFJkXGbAOwx2nAq5ybU
      eelSXuMgCZEBHXShYobTHMgcY0RLEQqHuPFdN/C9h/6bx/c/R7+IsLFmFX/28c/h8/ouwbcw
      tRBCYNs2iqLkX89Gp9+sYABLtimNeSmJeXCWeFi7cg0NDQ34cXNM7cNlaai2jCXZDDpiCEnQ
      6QohTt+fUSwyinXOZ+x2d+VFJASscjTRb0Q4nurFazvoHe7nrYO7CA+GOK72kVEsHh94hZYn
      5vPR939oer+AaYBt26NMu3MM8A6GO6Oj2DIdJcOsL6ulrLSMHbt2YpM1W/Y6o/lrQ6fle0u2
      JxpuXOSJH0CC7ekj+ffqjBIe2fsb+h0jKKqcZyaP5GTBvKaLXN2lR273lyQpT/RT5efIWeJy
      4840Y80KBjAUi5NFYdY6FvGJOz/M57/+17QlT5GRzWl7Zo74PZYDt+LksNaDLQkMssTvN5x8
      eOVmrl575bTNYToghMCyzpyGtp3dKGRZJpPJoOv6lDwDIJPJYBgGHo9nxphgdjCAalFhFvEH
      H/g9nnzpGXZkjmGr4vw3TgGKMy72OzrzDKHYMkiC5f4F3H/bve9osSFHiKZpoigKsixj2zbJ
      ZBLbtnE6nSiKghCCVCqFbduTYgDTNFHV8Ukrd6qkUikSiQQAuq5PCWNdCGYFAzgzGn9+1x9w
      uO0IDx18DFu+NMQPWfHKPC1OabbCopFKWpsW8okPfAy/33/J5vF2Yds26XQah8OR39llWUaS
      JHLRwaqqEo1GUVUVp9M5aWaeiPjHPv+dgFnhCW5y11IaKOEbW3/AiJQ6/w1TiBzxSwIclkqb
      ZwBLElSUl0/bM1OpFEIIMpkMQoj8Tp7DeO+NhSzLeeJ3OBxompYXfRRFwTRNDMPA7XbjcDjy
      zDEVsCyLVCr7O0mSlLc0zQRmxQlw1YaNpNNpmj11xIcS9DtGRoUxXwoEMx5qkkX4fX4+88Hf
      nRbRJyefJxIJMpkMsiyTSCRQFAWXy5XfeccqsBNBkiQ0TcsruGPvURRlUuNcCBwOB7Zto6pq
      fr4zEVA4K04AXdfx+Xz8/R9+kXuW3YJ0qamfLL91u8IsWrSQkmDJlIxpWRaGYWCaJpZlEY/H
      sW0bTdNQFIVMJoNt2xiGMWrHz8nz553z6d230NKTI/i3I/K8XZimmSf+ZDJJPB5nZGTkvKfW
      dGBWMEAODocDj+6aAfKHkJZk8/x38ZG77p+yMQ3DIBaLYds2QggMw0CSJLxeL6Z5xsLldDqn
      xeM8Xbu/rut4vd58BK1t21iWNccAF4N0Os2hw4d4rm0bNjPxRUo0VNfnLRtTAVVVEUIQi8Uw
      jGywXzKZ9WP4fD7cbjdOp5P/aSmtOcYqZNrcSZTTay4VZoUO0NHZwRe+8384kekhrmQuufwP
      4LRUEiNxnnr6aT7+4EenZExFUVBVFdM084pvToF0Op04nc4pec5MISdm5XI3hBAkEglkWcbr
      9V4SnWBWMMCT+15gn9WOmKHVyELi1qqrcLvc3H3fe6d07EJHVE5MyGQyqKr6Pz7QTpZlXC4X
      DocDIQTpdBrbtvO+CI/HM+1zmBUMEFcyiBn0NylCZm3rSm69ceqrRLhcLtLpNC6Xa5T4E4/H
      UVX1He1omyxyO32hXnOpMCsYYKbhMx24tKw4MtWxLTkzZSKRwDAMHA5HfvycKDQbmEAIgaqq
      uFyuS+oXmBUMIJENQdBthaRiXHIdwG+4+PovvsuJrg7qqmq46cabpmTcnLKYs/nLspwXe3Rd
      Jx6Po+v6jDqSpgqFHuhLqQTPCivQImc9yyM1bHIsRxGXfkldrhCmUxAeDrFkyZIpH1/X9fzJ
      kiN2WZbz4QuzCZZlEYlEiMVil4QRZsW31xsd4IRnkKfNHW87zHkqYEk2J5QBnu3YhmVN3/ML
      FV9VVWc0inI6IIQgGo1OGOIxHZgVIpCQQEhiRuz/ii1Tmyri6vo1dEd6cTrOnVp5IciZBXO+
      gJmEbdvE43HcbveUi16FXu2cwu/1eoHpc8rNCgbwmg4UISMjIdsSbksnqRgYkjXt+oAt2Tgk
      jVWLV+A67Jg2012h/D9TyBH/VDJiTrSzLItkMjlq1zcMg3A4jGEYqKpKcXHxlIt8s4IBrli9
      nmf3v4KaEJQVl7KqZRmSqrBl74u8Et1LRj53uuPFQEjQrg/ytae+y9riVkKhEG735OoKvV3M
      hLwvhMjHIOVCMqZi98/t9pZl5WOCcgyQi0nK+UAkScI0TeLxOD7fxeVXZzKZfOSrqqqzpzp0
      JpOht7eX2traPKEMDw/zpe98lSeHt5FUp0l8EOC2NEDi8+s/yubb75qx5I6phmEYeeLPhU/n
      QqMvFDlvdiwWI5VK5cWaXEQonBF3JEkapQtIkkRZWdkFiUJCCEzTZHh4GLfbjWVZ2bVc8Ere
      YdB1nfr6+lE/TjAY5PO/94d4rKmXy/OQQBUKpRkPL29/ledffGH6nnUJkSPSXGaY3+/H5XJd
      FPFnMhmGh4cZGhrKhz/kTpYcChnCsqz8Zzk/wcXoATnRLZFIYNs2pmnOHgaYCF6vl2tqV6PZ
      02crj2opfKaTsqJSjhw/Om3PuVQwTZNIJIIQIp9rcLG7fjKZJBwO50O4c+LUWBR+lvvLvXZc
      hIEhF+Ity3Lemmbb9uxnAEmS+PyDf0BFZnrTE8NaAo/Xw2d+91PT+pxLgRxhKopy0abWHPGP
      jIyMSrYvFHMKMdGzpiL4T5ZlioqKKC4uxuv14vf7Zz8DAMTjccqVoukZXEBl0k+jo4pNV107
      Pc+4hMgRrBACp9M5qfzec40FTEi4k2UsTdNwuVxTYn3KWdJy1qfLggFKSkpYXLGAqXYTeAwd
      j6UT1pN4fF5Wr1g1tQ+YASSTSQzDQFGUi1Lmc6KLbdtnlY4vlPMLxaDxnF+apuF2u7PyuiyP
      EokKYVnWqBPmfEilUtmo2re7sP+J0HWd33vwEzz5968y7IhPyZjBtJvSjBfNViitLueWdddP
      ybgzjRxhuVyu8+7QyWRywmC8SCRCOp2eMGl/MnA6nbjd7ryJNFeiJaebFBcX50+oRCJBMpnM
      J/ifb/62bZNKpS4PBgAYGRmhLOOdGgYQoAkFn+HElgTLy1t49w1TEwA3k0in0yQSCVRVPe/u
      n8tTtiwrT5i5HTqX83uxpU/S6XSeiYBRO7xpmoTDYRwORz5pKOdMS6VSKIoyodIsSVLeYXnZ
      MEBPT8+Ujjekx/GYDiQkrHdIjZuLRc40OZndP7fjptNpgsEghmGg6zqJRGLKIlTPd1IYhnGW
      XnC+cPRcQlE8nt0ILwsdACBQFGBQj128OVRAedqHKdmc8AxiyBYLGudPzSRnEJZlYZpmfic/
      F3IJ+pC1FOW8urkdOxQK5YtpzQQKo2bHY6JMJpOf62XDAEIInLbGNaKVitTFudOTikFjogSP
      5WBAH+HwkSNTNMuZQ6Ht/XyZWbmdVwiBpmkkEol83nI6nc470d6OUjqVKBS/colEuRMrlUqN
      mtesEIHC4TBFRec2cy5auIgvffx/89/ff4hKo4i+iyie5TGz8vGtxRv4Vfg1dgwcvLCBLhKn
      Tp3i0cceZWhoiIamBqrKq7jx+hsvaCxVVQkEAoTDYeLxeN5pNBaWZREKhUYVuM3VKMrV+Mw5
      u2aizAlkN7uRkRGKiory3uyJMCsY4JHXHyfTE+d3P/KJCeU/SZI43tHGrvRx5vuqKU17GLwA
      hdhrOahKBxhRUxS5/CweqcOT1Egmk5ekPEkulubll1/m4Z8/TNproCYVjsdOYOkWr+5/jf/1
      kT9423VJc2KDz+cjnU7nSyaO/T5zntScadOyLDweT36Hfacgk8kwODh4XkV8VjCAN+Xg0d1b
      WLdnLWtWrB73GiEEu9r3o9oyXfE+UC9s+48paXodUYQk+Gn3s6wKLOTB93zgktXmeeSXj/DM
      M88gANNlMlIbRzZl1LiChIRpWgguLDdZkqR8wBtkzZyqqp4VgzOWqMZWpnunYDJWqFmhA9iS
      QLYlwkOhCa8RQuDTPYxoaZq9daj2BS5dgh5XhF5nlLRisn7xatasWXOBM588TNPkueef4/nn
      n8fSbcLNUYaWRDA9Fo6wzgkzjDksCJ8aZmhwMK/Qng/nyrxyOp2k02nC4fAomb7QOyzL8oQ6
      w0TjvpOy2GbFCRBzpHFYKrHkxCKNLMv87gMf58q964mNjLDria9c+AMFuGydz6y5nw/ccc+F
      jzNJRCIRvvyVLzMcCTFcG0E2ZJzdTgy3BZIgZqcxVZsyTwmf/dCncTqdDA4O4nA4cLlc56wc
      kWtS4fV6R4Ud5xjD4XDkQ5cTiQR+vx+fzzdKzs95ay3LGrdBeW68se/BxSfAF95/IYw1Kxgg
      o5qMOFN0negkFovl0+jGwulwYpomDz3143yrpMmiLO1lSI9TZLhZW9bKjSuv5ebrbpr2igy2
      bfPzR35Od193tjdxVMawbAbMOGUHfYQ8CUJ6DIB5VY24XK488eZk+Uwmg8/nG1V/xzAMnE5n
      XnE1TZNEIoHL5cI0TTKZTL7RRaEjKhQK4fP58ubPnK6QTqeRJCnvlDoXplpcuphSNLOCAWxZ
      0BkM8/KJ7Rz/Yhuf/fRnmNc476zrTNPk8S1PYscNvB598kwgoE4u4yPL7mZZyxLWrBpfz5gO
      bNu2DdvKdmuMyknaksMMyjEs3WbETIMuYSg2CPjNyVe5smsDDXXZpt05QsuZAouKilBVNV95
      QVEUNE3LV2eGrDOskIDHxvEA+WtzyOkIlmWNS4jTpR9MRZONWcEAAEIWdJaECCeTfOvb/8nd
      m9/L2rVrR/0ghmGwK3SYAV+MhHL2DzsRigwXf/P7f8a8xsZpmPm5sXHjRnr7+khrGdrtIfrk
      Mw3/LGx0W8VQAAlSSoaR2BniLBRpctldgUAgqw/5fGiaRjQaHVXQ9+1WZ8sV7ir0I1wKTCRS
      vV3MCiUYQDcVXBmNEWeKw0YH//HQNzlw8MCoaxRFodpVRnKyBXRFtu7nu+rW01BfP+4lhb2u
      AEzLpKOzY9yd80KwY+cOHt/3BPHSJDFGy9dRJYXDPLOHBS0vCxe0AIybupirLZqrNJeT7QuT
      T8b7mwiKouSD1c63G08Vc4w3zsUo1bPmBPCmHNSOBAnpMQZ8MYoT7nEbVKd1CzGJsPJAxoUq
      ZJrddXzyfR8b1ymUTqf58te+hO5WaaproW+gl5SVpD26n+uXbOa2m2+/6HW99PJLmBmT0Eia
      qDy6/VOxNTr5flAZ4eixo7QubsUwDAKBAHDGTKmqKqFQKG+5yRWfGqv8jofxiEzTtLz3dyJM
      x4kwxwDjQUDrgkXEkjH29B9m7ZLV1NbWjrpE13VuXXYd+7e3k1YmOOoFzDfLafHVc/e772L5
      kmV4PeMr1ceOHaV34BQZPc7x4QNoNWkkl0AqsXn+2C9pXbSExobGC17S4OAgh04eIlWRoas7
      POq8LjW93FF7Fb5iPw93PkVGtbAkm1A0nF3GaSLJVagwTZPBwcEJ5fTCeyaLXJ+viTDRrj/V
      ZtCLUYJnjQg07E2wp+cgq5atYm3NMj7+sY+Pu2vfedNt1CaLqEmOHzpRZLh434pb+Oe/+Hs2
      rr9yQuIHaGpagN9djOSycTQnUYosZI+NJIGppYhEIhe1ph//5MeM+OKIGJjS6LiatcFF/NGn
      /5Aitx/dOr2PSWeIOJc4kouDKSSQyYo4MHHyyoWi0Pw5dg7nm89En1/MvGYNAyDBQe9Jfr7l
      UX7r7vdPGM+uKAoNckW2aNY48JoOmhsn191d13Xu/8ADeKUAaAX26LCbK6tuZemSpW9/HafR
      1d3F7p49JEvTiAzZrvcFcLmcdHd385P9TxDTsyKIKdns6Tyj96RSqXw9nYGBgQuymoxHoJNh
      momuGy/pvTDLa+x750qgH2+eb5cZZgUDyLZE9XAAzVIIqTGe2fLMhNe6XC5uvuVmQvo4rYxE
      1qusTTIVMFsrR2fjiusoCTdhDmiUDLRw/5rPcO8d912wj+DpZ57mS1/9Eik5Tfqk4HhiGPv0
      Bq4IiRVyA1ctWMvffO8f6dUjoxT6fNvW01Wlo9FoPn7oYnfw8er0FCa2F/7/Yp51IYQ89uSb
      rFVqVugAii2T0g1ahiswhEXr4tZzXr9m2SpaXqxhP52j3ndZGjc2XsnqVZPP7W1oaKShoZEb
      EjeRSiXx+wMXnEhuWRZbt27lsccfo3/+MIbLJHYsQ1jOMqsiZK7zLOfvPvuX/Ok//RVH3KdG
      W7MkeCW8mw073mDD6vXA9DedyDFF4b/T0QR7smEd473OzWs8PWFWnAAbq1dR4S4l4kjSWt1M
      Scm525RWVlZy64rr8mHNOfhNJ5tvugNFfvs7t9vtJhgsOSfxn+9HfPzxx/nxr37CQOMwGZ+B
      UAUaZ+YSsFx87Lb7KC0pJa1b41bCdlsOqsoqgelRNnMoHDtHXIU610RlT2YKE50Gs4IBli1Z
      xtc/9y/89Yf+H+KJOMXFxee9Z/MNt9MoVYyqFGHKNoHz5BVMFyzLYs+hvYxUxU7H+GTfdzpV
      5NP9n/y2k8WLFwOwtHHRWVUu3KbO/9r0sXG94FOJ3C5fSFCFcvw7jfjPhVnBAFue28LQ8BBL
      WpfwsQc/NikRpLi4mE/e8hFWZRpZZtQjCZjvq6HotO18OjDWEvPEk0/kX1uWRTqRQkmqyObp
      6yRwC+1M428JotGsp/fYseNnxhXgyeg80HwH16y/imAwiKZpU26Dz3WpKSTuwhKGE8nh72TM
      Ch3A4/bw6quvsfmuu3jptZepKq/kxhvOnxl17TXXcsWGK3jt9W1889Hvcf3SKy9ZHmt7ezu7
      d+3mtltvA7JOpWJ/MR2RbkyXlfVCGxJJTCwpK+p0qsN87mt/yVJXI6WSnyVD1aS8Flc3rmNV
      63KWLV2WLx8yHXI4jGbinE9huiI9pxrj+QtmBQNEohFuveUWLMtiy+GX8RxzsenaTeetp59L
      ANl0zbUsmN90Xt1hKjA4OIimaezbt4/77rtv1FyKioqwk1nxR00o+Lo8HEj15H8lCZDiFr/z
      2d/B7Xbz+JNP8MKB13j88FbeOLiDz3k+RXlZOaHQxHkRF4NcBedc7E9hBeccCi1EYzHVfoSL
      haZps4MB+swQ//jdf8OneuiQ+3BmNB5/8gnec9fmSd0vSdJZXuPpwN59++jt62HbrjdZ1txK
      45jgulVrVvPsUy8gmRLXFW9Cd2ts3/tw9kMBG9QWPnLLvciKTCQa4bmXn2ev3s2gEqfBXUFp
      Sem4u/H5LDPnCoEYDzmFstD8ORETFIpFU4G3O9exyM3b4/Hg8/lmBwOMuFI8F3kTWxbYukBI
      8Jttz7JqxUoaGhpmenoAHDt2jP/6r+/QlwrRoQyjBJy8a0wy/8rlK/hM+pN0nOygqqyaba9v
      w2e7SMjZzpeNJbX0DvZTHwrTPdBNVU05/pSHo45O+pMDpNPp89bhnIhBcp+N1VPGw2Q8t9MV
      GTrRCTPZuUM2083n882u2qCmamPL2UWnNZMuqZ89e/bM8KzOoLi4mLKyMgSCdnmIQ51Hz6pk
      IUkSV6y/AiyJb/z4O0TCEdaXtyIJ0G0Fl6SzdGErCxcu5Jdv/IzuwAlCFf0EG1SKK5SzRJ/x
      nFTjmS9z741VcHMoVH5z9+XeK/xs7HVThcKxx1tb7vV4/44dx+VyUVxcfGbNUzrTdxBizjSv
      7NqWrwA20/D7/Vy18Sq8wkmtXYxuKwwND497bU+4n053iGg8SmogRqXp51OL7uGj93+YVaed
      dIkh6OxJ09ttkGlTseMSD7/4CE8891Q+FHvsjpizyhQSLnAWIY8VM8YSfC6/wLKscRmh0Ccw
      HjMVjjsZZhkb03WuGKLCz3LzyD3H6XSetekof/7nf/7FmW6+drF4o30Xe06Ors1jKjahVITD
      r+/HpTmpqa6ZsZ66Qgi+8o2v8MjLT+JEJUKS3UYHNUaAFUuXn3V9b3cPJw93IAwbp+7ghkUb
      2bjuCmRFoaOrA4fuoLOrixPRbobdSZSExoAjSQd9HO9vZ3XZklG7HIyWnQsJYyxBFs658FrI
      lpnfd3A/r+16g//4zXc5dOgQaxavQtO0fEZY4QlQ+IzceBfyG+TSNC8UQmRzm/1+/1kn1KzQ
      ASZCxJPiRbGXnp/1UxwompYm1pPB17/zdfYN7iPuSLC0YiGNmQZ+1PM8//7qD1jSsnhUimUq
      laJpfhMRkUDTA/RYIUpDg7yw42We7nwFwzLxpxwEgyX4Mg50SwEdDDUb3Bd3Zth+4C0aGhpG
      NdUu3NknIvQcCv8fi8XYuX83R3vbONB3lF51mJRmQhHEE8f55g++zVWrrkDSZXbt2cPH7vvI
      uJGnha9lWZ501bjCzflcAXamaY4bAJm7Ple6Mbe+XEHfWc0AkO3i2FE0xN8+9E/8wyf/5pIr
      xbZtE46ESZTH8Csy1yy6ktd2vIGGwjBxfv3ckyxtXYKmafzkZz9l685XORbrZlCJsV/qwcRm
      +FSMZMrA1GzQIOJM0mWH8etONE1hxHMmIcWWBa+eeIureq+ktqZ2lKhTKPNPZLsv/ExVVQSC
      n257jFPBCIxpfjniTrNV7Gbvy8eIuVKARNP2Jq7bcO1ZJ06O4As9xefKFchd53Q6icViE363
      O3e8RDJ+hHQ6htu7hOUrrhpV4aLw2lgslh8rJwrNWh2gEGndJK5lZqRWpSzLyJqMZEpoYZ1E
      PMkLbW/SK0VJYfDjjuf56a8eoa+vj1+88DhtIydpUwcZVOKYkp31/krjJ+/bksCWBZopo1gS
      CNANmVqCbH19C+FIeML4nMI/WZbPqrScOzW273qLiDs5YQqpkGAoECetW6R1kx/teJTBwcH8
      8866fpzIVNu2OXLkyFnvOxwO4vH4WfpI7s8wMpzsfouFTR2sWDJEbcWL7Nq5ZZSIV4hcOfdc
      v2PTNGf/CaBYEtVGED0hk0jNUOk+A9YE1rL59vdw+MgRvDiosgP0yhGCeKgsLuPbP/guSYeB
      bQoyWGNutwgYbqLK6AwsRUgscrpxBC1SYYV0GkhLaMv7GFR6ef4lH++943350JCJxJznX36B
      rQdfQxYSD9z8fipKyuk+2U1RoIhUKommqMDkcpwHnBGefPlpVjQvo6lxPoqijHp+7jSwLAtd
      17PEf+wgr534ITvaymgoWc3G9ZtG1RiFsyM6hciWfamuSJBbissJWMdIpVI4nc4JTaGSJKFp
      WrYB96RW9T8EuqngzGhIZAPbLMVmtWsRV7au4fk9L+O/yCbLF4ov/NEXgGyJka6uLrAE6ysW
      E1A9LJjXxH8+/hAZl0WiLIPdb4/abWso5s4F1+LWHTzX/hqDjhimkiWKpGaiBWy0MhOtzKRw
      dUJAu/Yaj29RaWpoZlFz66gYKSEEvf19PPviszw59Eo2qUaCtkf/jWLNR58IUaIG8CkeUCZv
      1hQSPNn7Es/1bMPzsouFgfn89uYPo+s6QghOtLex8+izxJIRWio30Ny0mL6BU8w1bSUAACAA
      SURBVHjKDVTHSdp6I+g7XBh2Aq/Hz7y6lnwzC8Mw6Ok9hd8XIBgMsmfPqyyoG70plATD9PZ2
      MW9ey1lzy4ldqqricrkYHh6eHY2yv/r8d/nZS7/ittKrqC6qZNtbr1NeUcE9d7yXuro6/vhL
      f0EoEqLJXcvmOzdzxboNMzLPgYEBDh06xLx589izZw/tvZ3s6zvCLusYsoDSpBc1IbOXUyTk
      7I57rX8p/++DX8j22A2FeGbbc7zWuwtTtqn26FQtsRhH0gCyTCBMCTsu4xmp5qZV76W5uTmv
      TH7p+19jx8hBRlzpC66UfT4olsw1jhXMC9aiaBn67TdxV6SRJEgMK2RGFBy6E2dFFOm0tJaJ
      ySgOG8uQEL311AdX4vG6aOvbQdJ9nJETTprKqigL9lNbPToh37Lg4NEaKqrW0dyy8qzTTwiB
      rusEAgEGBwdnxwngSevUhANsTW9HnBJ8/JrfoqyklIULF7Ll2S20G6eIlKQYMGLIv5ZZs3L1
      eeOEpgNlZWVYts1Xfvh1eof76ZD6iTnSCEVgAT3eKKpbZuFQBTvpAmB7+DBf/Pr/xykjxPXN
      63nfTZuZv7eBHYd3gncAThfDzfTpaOUGsl4oL4OkCeQii1imJ58gnxMNYqn4tBI/gKXYHIgd
      YmGwm5NxC09dJs+w7qCFO2gxVrzSvdkTTtEEdkMHXclOpAyo1QIn4AlaLF/cNS7jKwosWXiS
      SPQUO3fGWbVqI4cPH2b+/KZ8AWNFUZAkiUAgMDsYQDdVev3Zis014SLWrFyNYRj09vbSPXCK
      lSWL6ezpwjIt+lMDdHR0sGDBghmZq9/no9xfys6Bg4z4xlRVkEC1ZTKWyUK7grRsUGx72Gof
      IIVJabebE0+eoEcfQPFLlCQdKO16lgHiEvJJBxVrU0hj8nmMIZWKVOtZeRI3rXwXQzujtGt9
      KLaELQnEFJpFdENGtmVWFjlZsdimLiRz+JSTTFUKeZKUJyugewvMqDZEEvD8HvA7JNYsFIzN
      PJUkCPgFnd0v8fLWN7GtKD7fx6ivb0CW5Xy5GEVRZocj7LWDb3HowBGSfgNLtokeHWRoaJCt
      217itz/4MW675mYW1zTTGKxFc+jceN0N017TcyJomsb6lWvRwxJ7eg7m7fdAtufwsJ9eM0Kp
      7UWWJAzJotbpZq2zipTLYqAogp6R8Scd2PUpTJ+F5bOQdAF9GpqhIXp9CGcaa0ShJNHExvrb
      ufm62/N28twJUFtdgxyx6O/u5bcW3Y7cZ3JSHZqyE+FKuYjN8zy0VEt4PeB2gd8pceyUhMN/
      YeHakgSy28IIqSimTDAA4/XCkySoKDcpL00RiTfSumQTkiTh9/vz8VLpdHp2nAD9UowYaXxp
      F05D40DvUfb2H6ZKLiESjeLz+VjSuoQlrTPjCBsLWZa55+738ehrT3DMMTDqs4Qrg8PUOK4O
      EJWSLNHraXUVkRZpohmDmqNFXLPa4vV+k1EVOjWB1yVz27p7qa2o52s//GccHo1FS9ZxzcZN
      o0JCcsqgLMvcddudLG5exEgqzrFjxygPexkMxPGmHEh21tafi7GaLHRDoSTjZHGdRkvTaIuW
      aYJtSCRDMq7iyTOBmc5yZbpPI4jCmjU2qnpus3YmA739MrIyD1mW0XUdj8eDbdv87JGfceP1
      N84OBvAInXKtiKVSIwelE/gCPt61+mruuOG2vAVhplEYP59/b+zBK2VDOJDAIVSEBE3BOlY0
      ruaFbVvYvFHBti1kWbCuTGVbm0xifhIpIyOlZFwlAVYvW0dRURGrFq1H0SUWtiyc8Pm6ruP3
      ++nt6+X7L/6UQU8MTVMIjrgJe5LYssCfcJJwZMhok/ehBFJOfme9i5Lg2fcUFwmukWXCUQdt
      7TZSZQbVeX4Gk/p0KpwytY02Pq89oeJfiGPtpdTU30FtbV0+3yK3/hOnOvg/P/qX2cEAm5ff
      wL2rb0F36Dy65dc88J4P4HG/MwgfYCQ2wpe++zUO9hxHkRXWLVmFjERUTubzepv0WpwZhWE5
      wp+89/dJJVL8xW++zNa+nSyrXcit776Tba/+ihXLLIaGZOrqLEo6VcweJ+g2KHDlvGw6JMCH
      3//xvAVECMHg4CA/+fn3KS+rZPXK9QSDwXwP3ltuvoXnD7xCp70fnAZlEQ+maiMJCHuS+JPO
      7IkgJEZcqTPMILLSkjOtIaRsGLotCeJ6hnjSTaV2NmHLcpYJiosEVeWw9bCG2nhuH4OwwSlL
      tDZP/sQwDIiNRKmqqsbpdBIMBvPfx4GDBzkQPkabu3d2mEETicQoC8c7LRm7v7+fT//D52kX
      AwzIZ9z6QdtDkXDjk3Tes/5WfmvzvaRSKTo6O/ivh79HsKqcH7dtocZdxmev+hCaLNPRvZ/j
      XUeo8Afo0QeIlKfBklA73PzFh/9mwsQe27bZtWcHvzn474i0BkkfN665n6amBRQXFzMwNMgf
      /8OfMuSOoVkKadXEldGIOdPEXacJVEDJiIchXxxJQGXYz3ULNuJze6mtrs3H2jz13K/58F0J
      JqNaDg1LDIQkhMiKR70xgeE10Tw2dlhFj6l4XLCy1WIy5ZpsGyJRia6eBkrKVvPud986yjMs
      hOBzf/l5JJ9Cd7xvdpwAhS78dxrxA5SXl1NT68efgZcGEmRO5/gOK3GSdobVdVdx6/U343K5
      cLlc7Ny5E5fLzV99+gu0/LqZrz/7ff70mX/js+sf4LpNd3Hi5/9KbXmIgW4FTnpQkLhr092U
      lZXlg75yMr/X681Xiq6urMX/+ir60ofJhOJsfek7vLlTZ/2aD7F27QZKKkvpyAxRFvGSUST6
      ikYIxJ0UxVyEvdlwCFO2KI160CwFf9LJSGKEm665AbfbzaFDB+jpfpH3Xp9ksqWRSoKCkuCZ
      k2KJDdERlVBEonZRVs4/10+aTkM8KREsEqTSsOdADQ5XDTffcjfl5eVn0YNt23hVFy7bxZ99
      9vOzgwEC01jJoRCdnZ3UT1Am/Vzo7e0lpSUwowKzsJaJgHvm38DH73yAF19+iauvvIqqqirC
      qREOxjqJRCLcd+c9LJ23kL/5/r+y/fAuTp3oQigyDx2PEYi5KBdFXLFuA+vWrSMajWKa5qgQ
      5MIAMEmSuOc9D/CdH3+DmNLJoqVpNC3F8y/8nJaWxVQ4SxAG9ARP9yCQshG17rSOO6WTcGaI
      eFL4E06CIx6ElI1ePXBgJ9HQVspLMyxvnZx8PhFkGYoCgqLA+fWC6IhEf2g1sWg70WgIWbuK
      G256F8XFxQQCgXE3Q1mWUWpd7Oo6kt0YLnyqlx8sy2JoeIjv/+D79PT2Tvq+9vZ2DDVNNJ3B
      LmAAXajM99eyd+9emuY3UVmZLWhVU17FbcuyP6RpmtTV1nHX8htw2Ap/+kd/wpWtN2PZAklk
      K7/t3b+PcDg8KkFlbMBbDpIk8cDmB2n0L+bogQW89qKfdetuwe/3c8vVN+FLjbEpSpBwZABB
      UcyVLcGS0ukoG6a/aIQd0UO8ue8ZFi5IUV15ccT/dnDkuELSvJWq6tWkjDrq5n+Km2/9IG63
      +6yuloVIJpN09nbnE/tnxQlwqTBv3jwymQzXXH0NiXicrq4u6urqzntfS0sLjm1uBAXVogW0
      SJVsvuNOioqKME0T27ZJp1OsWLocr9tDKBTiJ7/4Kb/a8SxLqlv4wu//EU6nk3n1jVRu9SOs
      bMKM3+djODQ8bm/gsUFkJ092MzQ0xK23bcbv89Pb28Pixa0IIVi1chXFP/JwU93VmIbBtpM7
      6fVGEDIknAZySqJ5KEhMNSlNuthY6eSFgQSH0ylq97nYuPbSRduWl9ocbttHcXGU1tYVLFq0
      MJ+pNjQ0hNvtPsvX8/rrr/ObrU/TqfTxnpLrZ48n+FJC13UaGhqwbZvjx4+f/wayYb1XVW/C
      3eylZ8t/cmPLlZT5SvjQbe+nt7ebF7b+NydP7sfjCWKLQQb6ZQ6RYolnGZvf/R6qqqrJZDLU
      VWcV3JUrV3Lf4L388le/5MorruStHW/x6GOP8cD991NZUYmiKNlIR1UlmUzm6/h3dXfw6vEf
      orjStJ/awG033k1lZRXhcBiPx4MkSfzphz5HeXk5Qgjujm3m4d/8jC3DryMB1wd8XL3JZjik
      4XIJZNkiFfNSWprtUTYSk/B5357P4EJRFBAsWtBF/8AgkbALyEZ4BoNBotEomUwGl8tFKBQi
      lUqhKApffvSb9PrCCAmWL1sGzPKMsOmELMs0NzdP6lqPx8P973+AEydOcPOhaub7yynyF/HE
      U/9CIHCSsgpBWQVAVqySJIW9CQPTadLU1ER1TTVOx+hqD7fceDPBQDG/efZpWpcsQVVUFi9a
      jCzLdHV38aNf/JgNK9bTNH9+vqvjrn3bcZUnUR2Cgb432L1nPqtXrUEIQTweR5IkqqqqgNPK
      otfLvTe+l+jPDtFQKrF6iYWqQnVVVokfGJRYvsykuMjGMCR27dMoDwpams+tuE4VTFNjyYpP
      sHjxyvx7OX+HaZqkUin++xffZ1/nQaKpGCFfAtmWqIoVU1+fTYyaY4BLhOHhYZ599RdULI0R
      l57n1EmVxSUKxcHRO6ZtQ+eIAB20kWy8/ERNOtavW0/AH8Dn81FdXZ1/3+l0sqp1JaUlxfzs
      x9/kAw98irYTx+gIb0etyj7PJZWydMmyUSLS2HxegH373uT2jTbuMZbyVAra21VWLDc4ekSj
      1CuxYTH0D0vEYnApIs9VxeDE8X2jGMDpdOJ2u/nKV7/KYGSI9kgXAoGiydzkuYKmhnl4PV4a
      ZysD5PrYXmiJ8ovF7t278fv9zJt3pkBtOBzi//7671HKTqKcNjs4PYKhIZnSstHOHUkCr1Mg
      FIsjAwf53v/9Vyor6ljauoF587KNOwYG+nnplSdw6H6u2nj9WVawstIybrrhRr71nW9iyj6+
      +/OHSJgHKVuczu/Mtq+Pra89xVXrb8TldI2bIpkNH1DRxvkq+/sVmheY6Dp4fTbFPoWKUkEy
      LTEclvH5pqc0YyECfkHfwHai0bvy+o+iKHR3d9PR0U6XY5AqZwmbNlzDitblNM1vQpIk3nzz
      zfwYsyIYrhCWZeVbd84ESktLCQQCo57/4qvPMKy9hnr6a450afgTGuUVNm73WMKDimI4dUhn
      QRnMX9iH5DjG/n2HMTN+SoKlvPzqYyi+Z8mIwzy75VlKixflPcC5WP94PM5DP/8h+zNt2OYw
      TrcgHVVQNVB0gaLBCB3YQyVUV9WefrY0Zi4SkUiE4aGD+HxZBTeVgqPHVAxDoq72DJFHQgqV
      pTAclUhbNgE/l0QMGg4b7N0XY8XKVfk5x+NxEvEEvf29/OMX/o7VK1ZREizJr8/n8+E4HUE3
      606AibrEXyqMd/JE48PIGmQSEnZGxmeqtC41JyQQTYN6j8q8+RkkORtuUFHfy4m+/2D/kQpk
      JU2ZD9yaoLjMwhY24XAYRVHyBWuTqRSWZBN3ZvB4dLzzMmBDtF/DlZRwl1oIS+JIxyGuWH91
      3plYaDFSFIW6uvm0t2lUVmQwjCzxNy8wyRWgswUMDSismJ9l5Hk1giPtCq9vh5oam7qaiU8C
      IbIi38UE5soStLUdJBaL5X/76upqqqqquNrecNbpmIsIzWHWMcBMIh7PRlQGg0FCoRAZI0NJ
      aTFdI9swUhpFQiHgh+pzEH8OPq/AyEg4nLl6OuAvEviLRvsfVA1GoiNUlFeMqrzgdDhobqyi
      SItSVHk6CUUBV5VBakghdtBBKiJTE9ApLi4mHA6TyWRGnVw5sSgS9dJ2IoUkQUO9RWH1xe4u
      hXnlUl5HkCRwOmDhfBtFhgOHFKqrbAJ+gS2ycT2qCv0DEqEhhXBUYuFCc1KOr/FQU23T3Ruk
      MJzHsiy6T57kgw988Lz3zzHAFCKdTrNz104My6S2ppb+vl56Q8fwlBZhR2wWb0hPWiyQZcFk
      ilhIUta5Mx4qS6pIqwcZ2/DGWWJBiYVHwFD3bo4cPUzzghai0ehZbVQDgQDvuu6D7Nn1JRa2
      nJlQLCbR261RXgSVZaOJt65ScOKkTF8EPA5BJCTT3Q09fTKnTJNSFK5aCeuXCo62w+Mvy7x7
      g01Z6dvtCwaHjzq45db3jrL5b9++HU0/d6eezs7OrNPsbT1xDudEMBjkwY88CGTNcYODg2x7
      7RVM06CHF+k4YlPVYOCYTAsCCZyTCBM+F37rvR/m2z/vJ+LcOy7jSRJ4ajP86Jkvc+2pe7j+
      XddjGAbH247jdrnzokJvbyeQDVjLjRMKydSXQ23l+BGfTXWCukpIpaGtW8JIS1iWxEK/SnW5
      oKFKcLJX4gftSVIBQd+gi7LSt+dI6x+QaGi6l5aWRflKEPsP7OflV1/hM5/6NKFQiLKysnH1
      QcMwiMfjc6EQ04VkMklPTw9m9Emay57mpitTLKyBvW866D0lc77CyU4HhIeVSZ0CE8EwDK5Y
      dDPpoYn3OUkCJRjjR79+mI6ODvYf3M+3fvpVotEogUAAl8vFSLQfRV1IR/dKtr1RQ/+AjMdj
      c6gjqwNMBF0DvxdWLhJcs8ZG0QSWYhOJQyoDu7sE4aI01ajMr397C00m4XhHCS0ti0mn03R0
      dLB161bmz5vPp37/kzgcjnMGRkajURobG2efFeidgFxz6t7eHpTMTqrKQVWyNvKFdRBQZU50
      S7g8NsoEtOn3CcKDMh3HVRxum8FeBYGE0zWa4uIxmSLPSioqKs4aw7Zt6uvqCZ3M0J86ijzB
      z6y6BC4XPL3lVd7sfwWhGBzu24cZF7Q2L2HR4pUsW3Y1ra1XsnDRWra+2AWpMA3VUOybnLVH
      liAUEzS0GBw9ohIakXgpmSDtspAHNXxkzaiSdCakWVZGK8i5FgfREYnDbU285+7P5jO8Tp06
      RUNDA4FAIJ/6qSjKhMUPHA4Hbrd7duQDvJMghGBkZATTNHny0X9j47IecidwZw9IlsSCOkE6
      AzuOSeA1KSsfbSmxLGg/plIfkGmsFHT1S/SHJSpLBYd7BN4Kg8BpB1rvSYXEwHJKS8/ubmPb
      Nj5/gHXrruIbj/01enX4nHNPDqhkkhKxNNjVaUgqfHzZH7O6oHZpdn4W3/32P7N8/lFSaYna
      CnHe8OdECl5+S0a4LdqOqRi6xbHGM7FRtX1e7miV2HdIISQs0sEMpREnVyyz8bgFpgV7D2g4
      XM3UN7Sybt0mvF4v6XQaXdcvOAx+TgeYYmzf/gZH9v6EYEBQUxqnUPwMBqCvL/t/hw5XLBYc
      6lDp6rSoOy0CxGIS4S6NjQsFvtM+gpZ6QSwhUV0uqCmHtpM6R/YIyhpMJAEbFu/HM8EeFh2B
      nTuclLkbCFvhsypGFMJVZuK0YeSwjrBA6/cyr3HeWdcpisK9H/gdXnn2q3T1yJQFT5yTAWwb
      9rW3sGjlRhoa6jmx4ATfeuk7o67p9STZuquWxY1L6e55BRw2JzEIxW/jjZ1v0bRgGdffdAVN
      TQtGEbvD4WD37t2sWLFi4gmcA7NCB9i5aye9byM8eTrR2NiIU4uzZH6UeTWj5VqvG9JGYWgy
      LGoQNPkVDuzSOLBHRR3RuHaFwDemEK0Q2SRvRYHmesHNa8AT0wh1ahT5wOUY/8/rAcjwwB2f
      xB1uHlf3sE3IRGVGOnT6j+iI8gwM6mxe/YEJW84GAsXcdOcXqJ+37Kx2rYVIpGBP23yuf/dH
      ufrqq6mrq2fDhitYX7QWNZ7lmsCQzg1uN9WlGdat3cDGeTdh9ujcueo+1q27koqyEVoXL2LB
      guazdvq+vj727ts78QTOg1nBAGkjzuNP/Yq/+uKf8YMffh+AU6dOTVunxHOhtLQMh6t8ws/j
      YyyWkgR1FYIVDRLLa2WWNArGc2IrihiVEqiqsGSBwOvK6hcTwe2E6MBWwuEQt268HxFzY6Uk
      bEPCtkDrb2St58NcWfoRIimZdG0KQjqbFz3Apk2bzrlWTdNoWdhKND6++BGNQ/vgWm6/+08I
      lpTl33c4HNy9+W6qRDnYUC40FjSb+PwjbH3pUfoHt1OjzyMSCwMSXt9iKivPPokAHv7VQxzv
      O3DOeZ4Ls0IEumLd1axfsxHTNPP24GQyOSNtOqPRKMfbo8RHJNYuFWfF0ViCUeZEOPN/hy7G
      VShtO2ttORehT4TuPomAe4Qd259mxeobiewtYvmya6kK1tDX38fG66/G581GrvVH+4gaw1xx
      zTWsGiP3TwSfz8/hsE5V2egShX2DcGJoHfe8/xPjmiHLyspwJV0UhX2EEjJ9PSaVNRaydABZ
      gbaDZRw4cJDa6jruvuczPPzww6xbt25UQbNIJEKMEAl9iKGhoQvq8jkrGADI133JobS0lM7O
      zlFBaZcCu3a+xoqVERwOwfaDKpmEjKaAaWUJvaw418oHDrRJxJJZ+7rXLVjUOP6Ye45JzK87
      m5m375OZV3tuJh8MSQT9NgcOvkna9PG///Lv8mEThRljuq5z33seOCuD7HwoLy8Hx1Is6628
      xaatS0Lyf4B73n/dhDFZQghuX38r9fX1bH1pK6r6wqgketV5iOUL7+Dhl79NebCCjRs3npXw
      Y9s2/aFTrKq+5oJb3M4aBhiLQCBAIBCgt7c3n2p4KeD2+Hljm4rPa1NVaeE0JJrrRu/sPYOw
      64jM2mU20XZYvUggAc+/KVNeLKgoEQT90B/K1vwPxyRcY5xiiRT4PIIF9RMzgBAQjUBjscK1
      rXD01PO88nIRK1auwzRNXC4XTqczbyq8UEvKwqU30X1oBw3V2bnYAuY3Np2T+Ht7e/Mi1p59
      ezh8VAXJBAFvHJVAtzAGH0Vy2bzx1uvcd+8DZ43j8XgIGvW88dbrdHZ08qH7HxxXaT8XZoUO
      MF7rnM7OTtra2vLZUJcKHk8RbScUQn0qXR0q+9okth+Q6BvKEuRwFPa1yVx3hY3PA00Ngqde
      k3lym0xRS4pkUYZdgxaP7bTZFzI5mjToS1t0nBpNnIYBkRjjKrWhCLSflGjrkmiplmiuhYX1
      cNt62P3GL9i1ewfl5eV4vV4kSSIUGqat7egFr7mpaQF9w0X5uURj0oTKM2RzI1544YX860Qs
      wcmTMidPLORkez1WRRq7Po3ktJE0QSw1Mu448XgcRdIQaZme7n5+9shPJ+wmMxFmxQmQi4XJ
      lf/I5de+sPU5Pvrgxy/pXObPn09Ly3LM+B6uWCZQ5KyN/NUdMvOrBT1DEhtX27z6lkxJAI50
      SSxttukZOl0I1iFweS04nWpsZCBySiMSkyg0t8STEkPhbJ2bUDRrYrVtyJjQOygxFJHQhMTt
      BZXgDQsUSaK3ZydPPRVmePg48dgxiopsZGUNTU1n19SfLJqW3Esk9i0CXugfVs8ZlTswMEBN
      TU3+tcfjQVc8fOK3P8XAwABfe/hfMFwJMMHvL2L5slX5a3PdLmVZ5rHHHqVlwULC0RDJWIoT
      7cfp7u5m0aJFk573rPAEJ5NJRkZGsnHgiQTxeJxIJEJ9fQPFxcWXNDdA0zTWrluHopezd+9u
      eoeyooptg6pnzZLt3TKZtMSmldA3BPEUpCRBoOzscIDBHoV0SKGsGMqC2do3RzslBmM2gaDg
      8DEFSYZTAxLdvTIjcSgpEqTTsLhWoqiADlUFFtXBqdAgquMwNdUDVFVlcxJMay0tLYsveN1+
      fxF7d71CxrB5ZadCUSBATW39uGJVIBBAVdX8KXHiRBv9A7vxeatZsWIFCxuWsH3H61Sq8/iL
      T/8t5eXl+TBz0zTp6+tjaHiIRDLBbbfejtvt5uChAyiKgsPlYMnipZOe96wQgQqRM30Gg0EO
      Hz3A937+1QmjJacTq1avxe1fSFWZza5DMoNhidJiQUO1YPUSG58nu5vrqkT/sIweGN0GVNgQ
      j0k4Uyq3bbLp7oddhyS27pCR3RYLFthUlNlYUlZnWN4iWLvUZskCQXEgy2Sl45RLcjthU4tC
      UcZB2z6d9hMyPT3lXHvtDRe8ViEEHo+HJet+HzlwD1desZgD+x/K9yseC03T2L9/PwMD2cLA
      xcVBSkpVevtOYFkWjQ2NPHjn7/GJj/5ulqgLyj9rmkYgEODVV17h5nffgq7rxOIxFK+NvjxM
      5/CRs57X09NzVhPxHGbFCXDgwA7a2o4AKm63GyEEyWSSLW/9lJj3GIf3dJCMZujo6KC4ODjq
      C50uSJJEeVULR05kqC/tJJ6EmvKsONQzAB5dIuiH7n6JcMKDYblQdQOH087WwO9RkUY0WucL
      4kmIm4LqWouGBhvPaSeZqkJVlc2+IzJBX9a7DFlnWVWZYN9RmXmVZ8fqqAr4PdAft/EFbYqD
      99DcfGG7fzKZJBKJ4Ha7KSoqoa5uPkePHiad7qGycvW4pVoAbNsiGo3idDppamoiHJJ58cVn
      SCRHaGxopra2Nl/ushBCCH75m0d58+BbNFY1snv3bnbu3MnqFeto7zxBo6+VVStHm3C7urqo
      qRm/T/SsYAAj/SrtJx4nWLIBRVFIJBKYpsmBQ3sRrhiRvmEk9w7+//bOMziu67rjv/ve9oZe
      Fr0XAiQAkgApkaIoiSIpWnQs27JjWbbjOB7bccYlXzKe5HMyyadknEwmLhlnlCiZcRzLkmxV
      i6JpikVsYkfvZYFdAAts333v5sOCIEEAJEhCILnGbwZfdh8e7sW88+49555z/j39l8jLaMRo
      NGIwGD72rZHNZqOuvomBMROh2QF6BgUj3gzGfDYm/SYmQiWUNjzP0/s/x6Pbn8XnsTA0fJnB
      HgPVOSoNFRKTMens6qpOejrMzCp09TqwmOP4pkz0DaSBWs6l9gguexwhklmYigJDEwLflCAv
      M5mMFo4lfz7qlXT5dHJL4oyOVrB335fu+n9xTST7xmeouLiKqqpdSyboXSM7O4fp6Wl+9L8/
      5Gr/RZ58dB+HLh7jaPAs6pSgsTa5jWlvv0pWVrKcMRKJ8MZbb/DKiVeZMs8wcnEIo2rk+c9+
      jq1bWklX86isqFq07V0uJRpSxAkWCtjtksnJCRJagp+/8RPsBTEsVVFmsdjdHgAAEn1JREFU
      RgwYVInZpmNzJRgaGuSX7/2UJ7d+hu3bHlmT8e18bB+zzY8QCoXIy0uGZGOx2CJh5x2PPoW7
      p5yOjg4u956kMHcEowFyM6H/ssrgiI1gKJ39z3yB/v4+svIy2LS5ECEEoVCIyUkfnQNnMGpn
      0XVBmlPicuocvqigIhifkRjtGpXVCfIN4PMV8cyB79xzA4FoNLqgIstut6+oLX1VVRUbSpo4
      7n2Ln706Q0ttM33e39A13I3H42FkdIQPjn1Afr4bv9/Py2/+D6dmz5GfbsIcyuAvvvlt8nKv
      G5mqqvT19eEucONyulYkgpISBuAZV+jqVUlPHyE3z43JqmBzR5BzgotxFS6dMiOsOp6pVzAX
      +jlx/j2aNjWzVpmwTqcLp/P6dmApVXNVNVBcXIKqGvBPj/LbYx7SnJL+EYWsTDtF5U9RUVGJ
      w+GgsXHjgt+12WzYbDa8E4OUuCROu+TsFUF9BeTPdZ443wV5pQmiURgYKOHpvd8nLW35cOVK
      GRwcnBeevhOklNiMDkS/i5HKDoZ7B8madNKpdOEZ91BdVY3D4eDfX/oJHmWS3tk+HAkDhpoI
      2oRgdmYWRSgIRZCelk53TzfP7H+GH//0R7z4wpdWdP6TEgYwMqYwkxVhcub3dB89jKs2Wb8q
      VHDkJVCMEnX+eYuiazA0PEhnZycVFRX3vZD+Rjo6Oqivr+fdt8YpK9STJ72Kk+btX8dqtc63
      IF+KYDCACB/GVQC+6WRo9EakhHAENO1JDnzis6smHpKTk3P7i5bAYDCwf99+JrzjnO07gdo4
      g8NqItFuY3BgkIryCqanpunlPFKT5LslwhBHqCCjCmfOneHcxdMEQyEqS6uor6tnenqant5u
      3j/8PtXV1RQVFqX+FshkkRikjjk9uOg7o32JkyIJzrIQL7/5TzhdDgqcdeza/jSVlfdHOO8a
      wWCQ4uJivN4Jclxj1FUkC8nT7GEEyW3TrRz43p5uhkZjzM4qBEJQlCdJJJhPVVYQzMzs5MCB
      L6IuV4lzhwQCs8TjKxPRXgqj0chnnvsswZeCDPouEyuYRgZVevt7eZzH2bhxI/INE2rD7Lwz
      L8MK9RlbsdrNOLPtxMZiKKjU125gYmICo2pmamqKl17+D2RRgLK0WuSUkR07d+Bw2GnYcD1M
      mhJO8NWuy3j1K/M6s7dDKEkpTnO6hik7SMAwwMnDlxgY6WFwYIjh4WEKC4rWXEhP0zQsFgtO
      pwuvz08i3Mv7p9KJ6fmUljcuyne6ESklZ0//nmDAy/5tOvVlEosRrvQoqGoy8uMLN7Jr9xex
      WhdHV+4Wk8l8z+3pLRYLUpcMtXsI230o2XHGB7xcPtPOxISXkpwKBqa7kherEmXKztcOfpu3
      Tr7KmOwm055LQ+Umenp7uNp+lYyMDGZDM+zds5/uqz14fGPYjU6ODr3Jac8RTp08zZRnBpvF
      nhoG0DN8Ca929Y5/75pUp1DAlB0kbBlgIn6FweBHnD97kbL8+vnt0eDg4MeuQ2A0GueT1IpK
      NnDu0ixSyeXRx/YnW51YLMsu5UIIPB4PTmM/5QVyvj1JYY6kZ0hhyJvG08/+5QI/ZCmklFy6
      dJHc3OUjOB8HbrebkqJSwt4EnvgASobGjoq9lBSVsuuxXRQYKtiY20ZgMI45kMbep/bR29NH
      aCLOZGiCmsIGnt7zNOcvnwNd4HbnM9A/QGlRKf7gFJPqEGphDMWpE7JN0d3bxfGBd1PDAIZD
      5xnxLz4AWSlCJNMQhEgahWqSaNZJTp0/SufVXpo2tN6Vk3cvKIqCu6CCX73yc0ZHR/CMjSKE
      IGOuA9xSzPhnKMu4vKCYRgjIckl+e9LIltZd8xKhy+HxeNA0/a6zK+8WRVHIyMjApriIjOmM
      9I7jdpTS0NiA1WrFaDQhpMKmmhZaW9pwOBxMeCaYmZ7FpWbh8Xhoa23j0W07aGtto7K8ksaG
      Rro6uinMKmZz5SO4RTm9E50Iiw4RFTUvnho+AHco47kShALmvAADQ6eJx+Nrcnh2M06nk22t
      dZRnHUNV4FT7EIVFxZz+8F0Smpmdjz25YJtWVV1L+ykH+VkLE8IMBqgoti55sHQzOTk5mEwm
      gsHgfVHYrK2tpbKykt+8Uch7V17j2Ojb2MIZxNQwxfYqyosqyczKJDc3l8cf283I0Citra0U
      lySVIDs6OwiHwgSDAfx+PxUVFfj9fmqqayguLqb7n7sZip5DMteka81n+JAhdYhEI/fFAAAq
      a7YxO3Sc/GxJY/kI5479I9WFYXqHBLr++LwBSCm5cukEAyNxHOZk4f21RryKAKknSCQSC3yI
      RCKx6AxAVdX5PqP3C4PBwCcPfpLWra109Xbgn/XT62sn4PPzzuG3yEjL5N3fvo2m6agGlSn/
      JBOeCVSDSl1dHeFwBJfThSY1Ht+9G9ucz9PX14dRMZHrr2E02keiy5o6BqDFITRoIhGHjNq7
      j0rcSDyo8FTTi7hus2/+OElPz2C8WwUSZKZJMtOSeU2zQfB4xigqSmqWaZrG9Nj7HNil45uG
      V4+oNJbrVM/VCxTlRvF5J7DNtQXXdZ0LFy6Ql5dHQUEBPT09VFRUABAIBJBS4lyLHue3wO12
      z+sVQHKO4XCYQDDAjN/P2XNn6RnqZu+efbx/5BB57jw+ffAzy9Y1lJaW8p1vfQ9NS3Dy1EkU
      RUkNA9BHTCQGzZTWRBnqMCcPwO4xy0FPQIXxaR5r23NflSfd7gJOhbO5Jp5xjfxsydEzL3Hy
      g3QKihtwu0tRDclYf3YG6ELndIdgNpxMk47Ew8Q7zmG12ens7GDr1lZaWlrQdR2fz7dA/M9q
      tc73GX2QUFUVh8OBw+EgPy+f6uoapqenGRoaYnvrIzQ3N98gBTXMK6++wsjYCE/ufoo0Vxre
      iQn279+PwWDE4XDyu9NHUsMASgp0PurXUVTIL4sx1mVGt+kY50Kdd4rUINSRz7Pfev6+y652
      d10ixzWx6PNYHJy2BFlpXqryDzETEHT1K+RlCsoKJZEYFOdCbWUyIiSlpN3jJysri2PHfExP
      T5OTk8OvXvk/YsF+nv/i9+fvrarqmoeA7wYhkoU3SxXfhMIhTs2eZTY3wJXOLix+EwcrDsx/
      f+T07zk+eTI1DCAcFhisyeN+k1VSsjFKPCIY7TQh0+5crkeLC57Y9uz83vF+EY/H+ejD/2ZL
      7RJ1AlOC6lKdtLnObHab5Auf0PDPwtkrCmaTZHhSUh2EDNfcKXAoKYN08OBBAHp7e9GmDpFp
      T5CIxzHdJz9ntTh64iivn/4NmytbuNh5kakcfzIXBkADo7ge7dSFTsgWSQ0DCIQExptqZo0W
      iSNTw9dlwlkUx2BdeaRIKPe+hVoNvF4vGbbxJb8TYm6c105HJQyMCj5qV2hr1NlYI/n1UcG4
      T5DhShbS2BzJUO7s7CwfnjiMf/QDnmhO8OvjgpHREcrusJ72QUFKyYWLF/jZ4ZeYyPHR0dOV
      DO/c8OKLOeN4wuNMTk6iKApBGUQ3p4hMaiTKkk1kMwoSWJwK42NGHKUrd4y1mAD9QdgCSAZG
      BcGIQCCREmzWZIpDbqbk3FWFDJek2J28boQYRW0aF8dU8qbMNFUlC3Daew1Iyzae2PMcAEfe
      +wUt7mPYcuZqik2FFBffuQD4g8I7R97hPw+9TKAgBAI06+J+UAm7xjvRQ1x++QqbXc2c9Z2H
      zBQJg/p0fVFxuJSga2Cy6qjxO9sDGULZbN3ctoojvDusVhs5WVYaKoPzb/pIFIbGBJe6FYry
      JBJ47YgguypK2lzWp9Wpoc4kH/6L3U6atn+XsrKy+fva7M75EGk0DiVVrbfd82ua9kD6BaFQ
      iA+6jjNTElzwxl8SBYbtYwwn3oS5SG9KGIDmSjDTp+LIvG75k8MGhscVEorErglWmvQsJRS4
      6tYsTfpWpKenY3TtIhR+Y74KzGKGqlJJLK6zoSpp9S6H4MyQgbSc5CqnKAKjET7qzGPnnu8m
      e/fcgC7sxOJgNkLPCNRta+ZmTp06RWNj4/zJcXt7Oxs2bPgYZ7syroVCxyfGefvEO3T5u+k2
      9K68uFewwFBSwgAwSGYikBNJNpmSEiamFKiIoEpIdFvR4qCuIOMjMGLksb0Hbn/hGvH4E8/y
      9qtn2FjhmV8FZoML23EW5UmiMZWuERV7ps7UoJEtjZKOfv+iKFYgECA2eRzHXKaDN5RHa3b2
      or9bUlKyIG3iQXj4Y7EYxz48zo/f+ynR9BhxRwLu0W9PDQMApuOS9ismYnGJMIAOGBKAClFr
      nOHzFgoaohiWUF2RGgTHjJhIo8a1mQJ3waJr7hdmsxmTs5VQ5PX5DtA9Q4Ka0uvzkBJcdkl+
      0IQyDXYb2CySDGeUUCgAXM/Xj8VimMU0QiRbqBgcG5asCLt51XgQOH/hPP967N+IFK/OQSek
      kAEkjDpRm4Y6F/dXEpAYNyEUiZofR6ZpTHRYyG+Mzkd4pITYtIly2w4a2rZRU11zW2WR+4FQ
      zAucfLMxuRW6xqQfpmYETXVJR/nc1eRK6J9VUG9a9jIzM/FH7ECY/jGorltZD9AHgUn/JJHM
      1Xv4IVUMQIIpqqIWXK+WEgZQC2LImCA+ZMJUGiOuJdMbTHMiznG/iT3V36Bt69rUBt8t9fUN
      tJ/6JS5HctzeKYE7VzI4mnzQNV3QXDc3pwQMexQSFFC76SBFRUWL7ldc+wyHL79DbvF2yisq
      13Qu90I4EMY0aySWFl+1e6aEAQgNhLpMnF+A0AV6UEFXIDqtzhuAGsmgpWnrGo707sjPd3My
      lAH4gGTbk4+uKmyo1HE5wHDD3Me8gkAIip2b2Lhx6bf7ltadbGnduRZDX1XMZjNylTN/H4Dj
      nntHDRkw5C3zVlAlIiuBPm4iI03HUXj9Oj2q3LLG9kHBaDRSUrmH8+2CST+4HEnRueyM6y1Q
      EgmYCSQlSpvrJA0bNt7+xg8ZO3fuJD26uomJqWEAVh1hXvrNIBRAg3SXJK0sPr//j02b2Lf9
      hQeqIP5WNG/ZzUykgHGfoDh/YbdpKeF8p+BClyAYhqzi5yhb47bwa4HD7mBHySO3VKS5U1LC
      AIRleSUYKUGZMKHFBJHpudx5HdzKFlqatqzVEO8Zo9FI9Ya9ZKVLXEvYbFYalBXAlf4cNrU8
      9UAeWq0GzfXNqNEVzE0Hkbh9MCMlDOB2s7BYJfbiKPG4JORVsfnrObjnhbUZ2yrSsrmN/rHF
      dclCQIlb4ptJZ9ee7yxbOJ8K1FXXYfYvfaCjRhRsHguVM2V8rewrfLnoBTbThCvkWHbVSAkn
      mMgtLCCgYLDoCBXMmRr+Cy6++uJXyMpc25rX1SDpr2jzEkuhCBgNyahQ/1g2u/d9h9w8923v
      8zAzPDKMbphb8SWoMQUk2OM2vtLyJbZu3ILFYpmv4HuOT/G740f44bl/RQ0KdINcEEVKDQO4
      1UpnlgT6jEhNQTHAp/f+yXwV1cOGw+HAnLaDE+cPYbJXUliymVAgRF5JCZ/aXY3ZfOuC91TA
      YrXgMrjQZqepNVWzp+FJBIL8PDe11UvrG+za/hivH34dt8PNKf+ZBQaQEkLZr178Lw51vrb0
      lxJ0r5Evb/0e1VXVOJ3OB+6g604Jh8NYLJaHfh53SyQaoaenh5rqmhX3NY1Go/zt3/8dik3h
      vPMSmjm5iqSGD3ArBIj0BMMjQ7hcrpR4aKxWa0rM426xmC1sqF86hWM5zGYzP/irH/A33/9r
      nOPXu12krAFcS4/WQwoubyG7dt5a83ad1McyJ6H1jWe+jnPEjnHWkCI+wBIkOqw05T9Cy8YW
      Nm1sSunIyDorRwjB9i3baWtp49LlS6lnADKkgEFi1u189cU/vefe9+ukHkIIVFWlYUND6hmA
      NmxmR+le9n5r3/rDv84tUVU19XwAkR6nf6iPNNfH28h2ndQg5V6RhfZyvvn5P0/ZVIB1VpeU
      WgF0v0p5Wv2yyoTrrHMzKbMCyLBgr/uP2b/nwB90jHydOyN1VgCTpN1zkdGx0fs9knUeIlLG
      AIQK/coFhseG7vdQ1nmISBkDkFHBI2kH2Nrcer+H8geBpmnIm7uRPYSkjAGokw4+8cQfrUd/
      1rkjUsIJljMqn2/7M5yOxYIO195S647x6pIqL5rUWAGkwDvpXfRxIpEgHA6j68uXTK7zh01K
      GEAioHD50pVFn6uqitVqTZm31TqrT0oYgLTqeGOjTHgXKqkIIda3PuvckpQwADGrEsDHv/zi
      H/j1m69x5syZVblvqkQ61lme1DCAqEKi34Jh2onD4aKgYHWa215TbV8ndUmJmuB4PE5nZyfx
      eJympqb7PZx1HiJSwgDWWeduMcTjq9dpd511Hjb+H+qd2/QfDsHqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      xufa+qYoivAT0ooEApndzRYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Time Series Analysis' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='latest average value' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAHY0lEQVR4nO3bW4wVdwHH8d/MuezlnLN72LsL2wWhtNxEYrcXFOlabEQpSmlsBU1fSIw+
      afTNxAefTGOivjVeaAyaGNKYCiHUFhKISi0sgWAQ5M5y213YO3t2z57dMz7QLmyWtjzBwd/3
      83Rm5j9z5uH/3ezMnAmiKIoEmIpL0s6evTqX63zQ5wLcd3FJOpvr1JGh4w/6XID7LnzQJwA8
      SAQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAO8Edn+MP7CyAT9BW8yU9
      nZ4zbd2poUP628AJSaEWZpbpuZo2zSuv10RxRAf73tOu3g4VFN31eK2pJdrQ0K5HyqpVKI6q
      o28/AaB0La1aofqwT+8PX5ha11MYliS1Zp7QD1vWqmOgQzuHjiqTaNJXmzYojHL6S9/xGcdq
      qFikH83dpFOD7+vPfeeUjFWpNZEmAJSqhBrLqvTvG29rV+/MCT1auK5fnP21zuYHptZly1u1
      OP3puwQQaG3D8+oePqjXL+/QxAdr/yGuAVCiglhWjfGkbowPKhHEZmzvGTs/bfJXxOu0oKJe
      1/I9M48V1mhZqlEH+g+pIl6jx1LzVBuvlMQ1AEpUJl6liiCuza3f1ytRpEIxpyMDHdre/a6G
      i8VpY1sqF2tLy0YlJzr11o0jM45VGU8rFSa0pullfausQaFCSQXt795BAChNQ/nz+ump1xQL
      AlXEUppTMU8bm55XVTihX17ZK0kKFNeaxvV6qb5NR/v26Y9dezVcnJhxrDAIJUU62r9f7/T/
      R7liUStq1uh7zRsIAKWqqJ7x61NL53LnFcbr9O3sQkl7JQX6WvMmvZCdoz9cfF0Hhi9+5JFG
      JnIaj4q6NnZZg5NjkqSDve/ohcZ2rgFQmqoTs1QeTJ+e6Vilxop5SVJj5TKtr3lcWy/+7iMn
      f6hQgaTi5HWdHO3XU9kVUxM+DDNKh1wDoETNzbRpS8MKHRo8pkv5Ac2ufFTPzlqkHZd/L0la
      nFmkmMa1pHqlHq2+vd9Q/pJ29B5WOvmIfrbgu9p1dav2DpzVrp49+sncjdpSDHQs160V2VVK
      FDoJAKXpWP8+bYtGtDQ1W/MrM5LGtO3ib7V/6IwkaWD8qt4biBSGSZXfsd9YeOuO0ZOzntHQ
      6HF1DF2QJHXePKzXLkxqdXahlqarlC9c1M+v7FEQRVH0qwtv6MjQzHutwMMoHpulH7e+rDc6
      t6p7Yvzjx96ncwLum6iY0286t6nvEya/RAD4PzQZ5dU3kb+nsdwFgjUCwEMgUHmYnPYz5g/F
      dPtnEokgMTUmuOvomQgAJShQU7L21scwo83NL+obDV/RdxpX3zEirpW17fpBy3pJUktqmb7e
      0K5nqxcqEctqdXbJPX0TAaAExbW6tu3W5IzG9NeuHdre/bayZbffDQiCpPrzl5RXQpI0r7JF
      /+w7oIbyOVqSWagzIxemJvfnsk8qG8ZVVz5fn6ls1Bdqn9OmT63T8spmAkBpSSea9FLTWj2e
      WqBvNn1ZWRUVxuv16uyNOtC7b2pcMcrpxEinJj9YPj1yTqtqv6jBibxqYuVaWfN5ratrUyBp
      RBVanmrUZ6uXabgwpuWZFh0ePKrz+V4CQGm5WejSm127dXLkjLZ3vashVWpzU7t2d72ljpEr
      kqTyMDljv2u5k3qze49Go0kNFCMdH/iXwniDyiSdHT6h1vRSzY4V1VkY0p+u7FRN2Xytr3uC
      AFCKCtp9/e8qSsok61QeJrSuab22NK9VJt6sVxqeUSo5R1tmv6hUvEqvNq9VKpDqy1vVM3pa
      p26e02PZp5XLd2pMUmGyR9ejanXl/qtJJbSq5ik1JtO6OtbNk2A8XOall2h09LS6Jj/+IVeg
      QNG0d4MD6Y7lD7fzIAwPlfM37+0PdTTjxfjortv5FwjWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADW/geuacDO2BL//QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='latest global gap' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
